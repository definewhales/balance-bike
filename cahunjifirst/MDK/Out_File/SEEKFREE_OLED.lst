C51 COMPILER V9.57.0.0   SEEKFREE_OLED                                                     04/28/2021 20:58:26 PAGE 1   


C51 COMPILER V9.57.0.0, COMPILATION OF MODULE SEEKFREE_OLED
OBJECT MODULE PLACED IN .\Out_File\SEEKFREE_OLED.obj
COMPILER INVOKED BY: E:\keil5\anzhuang\C51\BIN\C51.EXE ..\..\Libraries\seekfree_peripheral\SEEKFREE_OLED.c LARGE OMF2 OP
                    -TIMIZE(8,SPEED) BROWSE INCDIR(..\..\Libraries\libraries;..\..\Libraries\seekfree_libraries;..\..\Libraries\seekfree_peri
                    -pheral;..\USER\inc;..\USER\src;..\CODE;.\HARDWORE\Data;.\HARDWORE\DianGan;.\HARDWORE\FusionAngle;.\HARDWORE\BianMaQi;.\H
                    -ARDWORE\ShangWeiJi;.\HARDWORE;.\HARDWORE\Balance;.\KaErMan) DEBUG PRINT(.\Out_File\SEEKFREE_OLED.lst) TABS(2) OBJECT(.\O
                    -ut_File\SEEKFREE_OLED.obj)

line level    source

   1          /*********************************************************************************************************
             -************
   2           * COPYRIGHT NOTICE
   3           * Copyright (c) 2018,逐飞科技
   4           * All rights reserved.
   5           * 技术讨论QQ群：一群：179029047(已满)  二群：244861897
   6           *
   7           * 以下所有内容版权均属逐飞科技所有，未经允许不得用于商业用途，
   8           * 欢迎各位使用并传播本程序，修改内容时必须保留逐飞科技的版权声明。
   9           *
  10           * @file          OLED
  11           * @company       成都逐飞科技有限公司
  12           * @author        逐飞科技(QQ3184284598)
  13           * @version       查看doc内version文件 版本说明
  14           * @Software    MDK FOR C51 V9.60
  15           * @Taobao      https://seekfree.taobao.com/
  16           * @date          2019-04-30
  17           * @note    
  18                    接线定义：
  19                    ------------------------------------ 
  20                        OLED液晶    单片机                        
  21                        D0          查看SEEKFREE_OLED文件内的OLED_SCL_PIN   宏定义
  22                        D1          查看SEEKFREE_OLED文件内的OLED_SDA_PIN   宏定义            
  23                        RES         查看SEEKFREE_OLED文件内的OLED_RST_PIN   宏定义    
  24                        DC          查看SEEKFREE_OLED文件内的OLED_DC_PIN    宏定义
  25                      CS          查看SEEKFREE_OLED文件内的OLED_CS_PIN    宏定义
  26                    ------------------------------------ 
  27           *********************************************************************************************************
             -***********/
  28          
  29          #include "zf_spi.h"
  30          #include "zf_delay.h"
  31          #include "SEEKFREE_FONT.h"
  32          #include "SEEKFREE_PRINTF.h"
  33          #include "SEEKFREE_OLED.h"
  34          
  35          //--------------------------------------------------------------------------------------------------------
             ------------
  36          //  以下函数是使用软件SPI通信，相比较硬件SPI，软件SPI引脚更加灵活，可以使用任意普通IO
  37          //--------------------------------------------------------------------------------------------------------
             ------------
  38          
  39          //--------------------------------------------------------------------------------------------------------
             ------------
  40          //  @brief      内部调用，用户无需关心
  41          //  @param      void        
  42          //  @return             
  43          //  @since      v1.0
  44          //  Sample usage:               
  45          //--------------------------------------------------------------------------------------------------------
             ------------
C51 COMPILER V9.57.0.0   SEEKFREE_OLED                                                     04/28/2021 20:58:26 PAGE 2   

  46          void oled_wrdat(uint8 dat)
  47          {
  48   1        uint8 i=8;
  49   1        
  50   1          OLED_CS(0); //使能信号端，拉低时正常使用
  51   1        OLED_DC(1);
  52   1        OLED_SCL(0);
  53   1        while(i--)
  54   1        {
  55   2            if(dat&0x80){OLED_SDA(1);}
  56   2            else{OLED_SDA(0);}
  57   2            OLED_SCL(1);
  58   2          
  59   2            OLED_SCL(0);
  60   2            dat<<=1;
  61   2        }
  62   1          OLED_CS(1); //使能信号端，拉低时正常使用
  63   1      }
  64          
  65          //--------------------------------------------------------------------------------------------------------
             ------------
  66          //  @brief      内部调用，用户无需关心
  67          //  @param      void        
  68          //  @return             
  69          //  @since      v1.0
  70          //  Sample usage:               
  71          //--------------------------------------------------------------------------------------------------------
             ------------
  72          //void oled_wr6dat(uint8 dat)
  73          //{
  74          //  uint8 i=6;
  75          //    
  76          //  OLED_CS(0); //使能信号端，拉低时正常使用
  77          //  OLED_DC(1);
  78          //  OLED_SCL(0);
  79          //  while(i--)
  80          //  {
  81          //    if(dat&0x80){OLED_SDA(1);}
  82          //    else{OLED_SDA(0);}
  83          //    OLED_SCL(1);
  84          //    OLED_SCL(0);
  85          //    dat<<=1;
  86          //  }
  87          //    OLED_CS(1); //使能信号端，拉低时正常使用
  88          //}
  89          
  90          //--------------------------------------------------------------------------------------------------------
             ------------
  91          //  @brief      内部调用，用户无需关心
  92          //  @param      void        
  93          //  @return             
  94          //  @since      v1.0
  95          //  Sample usage:               
  96          //--------------------------------------------------------------------------------------------------------
             ------------
  97          void oled_wrcmd(uint8 cmd)
  98          {
  99   1        uint8 i=8;
 100   1          
 101   1        OLED_CS(0); //使能信号端，拉低时正常使用
 102   1        OLED_DC(0);
 103   1        OLED_SCL(0);;
C51 COMPILER V9.57.0.0   SEEKFREE_OLED                                                     04/28/2021 20:58:26 PAGE 3   

 104   1        
 105   1        while(i--)
 106   1        {
 107   2          if(cmd&0x80){OLED_SDA(1);}
 108   2          else{OLED_SDA(0);}
 109   2          OLED_SCL(1);
 110   2          
 111   2          OLED_SCL(0);
 112   2          cmd<<=1;
 113   2        }
 114   1          OLED_CS(1); //使能信号端，拉低时正常使用
 115   1      }
 116          
 117          //--------------------------------------------------------------------------------------------------------
             ------------
 118          //  @brief      内部调用，用户无需关心
 119          //  @param      void        
 120          //  @return             
 121          //  @since      v1.0
 122          //  Sample usage:               
 123          //--------------------------------------------------------------------------------------------------------
             ------------
 124          void oled_hexascii(uint16 hex,int8 * Print)
 125          {
 126   1        uint8 hexcheck ;
 127   1        uint8 TEMP ;
 128   1        TEMP = 6 ;
 129   1        Print[TEMP ]='\0';
 130   1        while(TEMP)
 131   1        {
 132   2            TEMP -- ;
 133   2            hexcheck  =  hex%10 ;
 134   2            hex   /=10 ;
 135   2            Print[TEMP ]  = hexcheck + 0x30 ;
 136   2        }
 137   1        
 138   1      }
 139          
 140          //--------------------------------------------------------------------------------------------------------
             ------------
 141          //  @brief      OLED初始化函数
 142          //  @param      NULL
 143          //  @return     void
 144          //  @since      v1.0
 145          //  Sample usage:     
 146          //--------------------------------------------------------------------------------------------------------
             ------------
 147          void oled_init(void)
 148          {
 149   1        
 150   1          OLED_CS(1);
 151   1        OLED_SCL(1);
 152   1        
 153   1        OLED_RST(0);
 154   1        delay_ms(50);
 155   1        OLED_RST(1);
 156   1        
 157   1        oled_wrcmd(0xae);//--turn off oled panel
 158   1        oled_wrcmd(0x00);//---set low column address
 159   1        oled_wrcmd(0x10);//---set high column address
 160   1        oled_wrcmd(0x40);//--set start line address  Set Mapping RAM Display Start Line (0x00~0x3F)
 161   1        oled_wrcmd(0x81);//--set contrast control register
C51 COMPILER V9.57.0.0   SEEKFREE_OLED                                                     04/28/2021 20:58:26 PAGE 4   

 162   1        oled_wrcmd(Brightness); // Set SEG Output Current Brightness
 163   1          
 164   1      #if (0 == OLED_DISPLAY_DIR)
 165   1        oled_wrcmd(0xa1);//--Set SEG/Column Mapping     0xa0左右反置 0xa1正常
 166   1        oled_wrcmd(0xc8);//Set COM/Row Scan Direction   0xc0上下反置 0xc8正常
 167   1      #else
                  oled_wrcmd(0xa0);//--Set SEG/Column Mapping     0xa0左右反置 0xa1正常
                oled_wrcmd(0xc0);//Set COM/Row Scan Direction   0xc0上下反置 0xc8正常
              #endif
 171   1          
 172   1        oled_wrcmd(0xa6);//--set normal display
 173   1        oled_wrcmd(0xa8);//--set multiplex ratio(1 to 64)
 174   1        oled_wrcmd(0x3f);//--1/64 duty
 175   1        oled_wrcmd(0xd3);//-set display offset  Shift Mapping RAM Counter (0x00~0x3F)
 176   1        oled_wrcmd(0x00);//-not offset
 177   1        oled_wrcmd(0xd5);//--set display clock divide ratio/oscillator frequency
 178   1        oled_wrcmd(0x80);//--set divide ratio, Set Clock as 100 Frames/Sec
 179   1        oled_wrcmd(0xd9);//--set pre-charge period
 180   1        oled_wrcmd(0xf1);//Set Pre-Charge as 15 Clocks & Discharge as 1 Clock
 181   1        oled_wrcmd(0xda);//--set com pins hardware configuration
 182   1        oled_wrcmd(0x12);
 183   1        oled_wrcmd(0xdb);//--set vcomh
 184   1        oled_wrcmd(0x40);//Set VCOM Deselect Level
 185   1        oled_wrcmd(0x20);//-Set Page Addressing Mode (0x00/0x01/0x02)
 186   1        oled_wrcmd(0x02);//
 187   1        oled_wrcmd(0x8d);//--set Charge Pump enable/disable
 188   1        oled_wrcmd(0x14);//--set(0x10) disable
 189   1        oled_wrcmd(0xa4);// Disable Entire Display On (0xa4/0xa5)
 190   1        oled_wrcmd(0xa6);// Disable Inverse Display On (0xa6/a7)
 191   1        oled_wrcmd(0xaf);//--turn on oled panel
 192   1        oled_fill(0x00);  //初始清屏
 193   1        oled_set_pos(0,0);
 194   1      }
 195          
 196          //--------------------------------------------------------------------------------------------------------
             ------------
 197          //  @brief      OLED显示坐标设置
 198          //  @param      x     x轴坐标设置0-127
 199          //  @param      y           y轴坐标设置0-7
 200          //  @return     void
 201          //  @since      v1.0
 202          //  Sample usage:     
 203          //--------------------------------------------------------------------------------------------------------
             ------------
 204          void oled_set_pos(uint8 x, uint8 y)
 205          {
 206   1      
 207   1          
 208   1          oled_wrcmd(0xb0+y);
 209   1          oled_wrcmd(((x&0xf0)>>4)|0x10);
 210   1          oled_wrcmd((x&0x0f)|0x00);
 211   1      }
 212          
 213          //--------------------------------------------------------------------------------------------------------
             ------------
 214          //  @brief      OLED清屏函数
 215          //  @param      bmp_data  填充颜色选着(0x00 or 0xff)
 216          //  @return     void
 217          //  @since      v1.0
 218          //  Sample usage:     
 219          //--------------------------------------------------------------------------------------------------------
             ------------
C51 COMPILER V9.57.0.0   SEEKFREE_OLED                                                     04/28/2021 20:58:26 PAGE 5   

 220          void oled_fill(uint8 bmp_data)
 221          {
 222   1        uint8 y,x;
 223   1        
 224   1        for(y=0;y<8;y++)
 225   1        {
 226   2          oled_wrcmd(0xb0+y);
 227   2          oled_wrcmd(0x01);
 228   2          oled_wrcmd(0x10);
 229   2          for(x=0;x<X_WIDTH;x++)  oled_wrdat(bmp_data); 
 230   2        }
 231   1      }
 232          
 233          
 234          //--------------------------------------------------------------------------------------------------------
             ------------
 235          //  @brief      OLED控制一个坐标下8个像素的点亮与熄灭
 236          //  @param      x     x轴坐标设置0-127
 237          //  @param      y           y轴坐标设置0-7
 238          //  @return     void
 239          //  @since      v1.0
 240          //  Sample usage:     oled_putpixel(0,0,0xff);//将0,0坐标 8个点全部点亮
 241          //  Sample usage:     oled_putpixel(0,0,0x01);//将0,0坐标 最低位点亮其余7个熄灭
 242          //  @note                   同理可以任意控制一个坐标下8个像素的点亮与熄灭
 243          //--------------------------------------------------------------------------------------------------------
             ------------
 244          void oled_putpixel(uint8 x,uint8 y,uint8 data1)
 245          {
 246   1        oled_set_pos(x,y);
 247   1          oled_wrcmd(0xb0+y);
 248   1        oled_wrcmd(((x&0xf0)>>4)|0x10);
 249   1        oled_wrcmd((x&0x0f)|0x00);
 250   1        oled_wrdat(data1);
 251   1      }
 252          
 253          //--------------------------------------------------------------------------------------------------------
             ------------
 254          //  @brief      OLED关闭一个坐标所有亮点
 255          //  @param      x     x轴坐标设置0-127
 256          //  @param      y           y轴坐标设置0-7
 257          //  @return     void
 258          //  @since      v1.0
 259          //  Sample usage:     
 260          //--------------------------------------------------------------------------------------------------------
             ------------
 261          void oled_clrpixel(uint8 x,uint8 y)
 262          {
 263   1        oled_set_pos(x,y);
 264   1          oled_wrcmd(0xb0+y);
 265   1        oled_wrcmd(((x&0xf0)>>4)|0x10);
 266   1        oled_wrcmd((x&0x0f)|0x00);
 267   1        oled_wrdat(0x00);
 268   1      }
 269          
 270          
 271          //--------------------------------------------------------------------------------------------------------
             ------------
 272          //  @brief      OLED显示字符串(6*8字体)
 273          //  @param      x     x轴坐标设置0-127
 274          //  @param      y           y轴坐标设置0-7
 275          //  @param      ch[]        字符串
 276          //  @return     void
C51 COMPILER V9.57.0.0   SEEKFREE_OLED                                                     04/28/2021 20:58:26 PAGE 6   

 277          //  @since      v1.0
 278          //  Sample usage:     
 279          //--------------------------------------------------------------------------------------------------------
             ------------
 280          void oled_p6x8str(uint8 x,uint8 y,const int8 ch[])
 281          {
 282   1        uint8 c=0,i=0,j=0;
 283   1        while (ch[j]!='\0')
 284   1        {
 285   2            c =ch[j]-32;
 286   2            if(x>126){x=0;y++;}
 287   2            oled_set_pos(x,y);
 288   2            for(i=0;i<6;i++)  oled_wrdat(oled_6x8[c][i]);
 289   2            x+=6;
 290   2            j++;
 291   2        }
 292   1      }
 293          
 294          //--------------------------------------------------------------------------------------------------------
             ------------
 295          //  @brief      OLED显示字符串(8*16字体)
 296          //  @param      x     x轴坐标设置0-127
 297          //  @param      y           y轴坐标设置0-7
 298          //  @param      ch[]        字符串
 299          //  @return     void
 300          //  @since      v1.0
 301          //  Sample usage:     务必注意，本函数字符列高位16，因此y应该是每次递增2
 302          //--------------------------------------------------------------------------------------------------------
             ------------
 303          void oled_p8x16str(uint8 x,uint8 y,const int8 ch[])
 304          {
 305   1        uint8 c=0,i=0,j=0;
 306   1        
 307   1        while (ch[j]!='\0')
 308   1        {
 309   2            c =ch[j]-32;
 310   2            if(x>120){x=0;y++;}
 311   2          
 312   2            oled_set_pos(x,y);
 313   2            for(i=0;i<8;i++)  oled_wrdat(oled_8x16[c*16+i]);
 314   2              
 315   2            oled_set_pos(x,y+1);
 316   2            for(i=0;i<8;i++)  oled_wrdat(oled_8x16[c*16+i+8]);
 317   2              
 318   2            x+=8;
 319   2            j++;
 320   2        }
 321   1      }
 322          
 323          //--------------------------------------------------------------------------------------------------------
             ------------
 324          //  @brief      OLED显示无符号数(6*8字体)
 325          //  @param      x     x轴坐标设置0-127
 326          //  @param      y           y轴坐标设置0-7
 327          //  @param      num         无符号数
 328          //  @return     void
 329          //  @since      v1.0
 330          //  Sample usage:     
 331          //--------------------------------------------------------------------------------------------------------
             ------------
 332          void oled_uint16(uint8 x, uint8 y, uint16 num)
 333          {
C51 COMPILER V9.57.0.0   SEEKFREE_OLED                                                     04/28/2021 20:58:26 PAGE 7   

 334   1        int8 ch[7];
 335   1        
 336   1        oled_hexascii(num,ch);
 337   1          
 338   1          oled_p6x8str(x, y, &ch[1]);     //显示数字  6*8字体
 339   1          //oled_p8x16str(x, y, &ch[1]);  //显示数字  8*16字体
 340   1      }
 341          
 342          //--------------------------------------------------------------------------------------------------------
             ------------
 343          //  @brief      OLED显示有符号数(6*8字体)
 344          //  @param      x     x轴坐标设置0-127
 345          //  @param      y           y轴坐标设置0-7
 346          //  @param      num         有符号数
 347          //  @return     void
 348          //  @since      v1.0
 349          //  Sample usage:     
 350          //--------------------------------------------------------------------------------------------------------
             ------------
 351          void oled_int16(uint8 x, uint8 y, int16 num)
 352          {
 353   1        int8 ch[7];
 354   1        if(num<0)   {num = -num;oled_p6x8str(x, y, "-");}
 355   1        else         oled_p6x8str(x, y, " ");
 356   1        x+=6;       
 357   1          
 358   1        oled_hexascii(num,ch);
 359   1          oled_p6x8str(x, y, &ch[1]);     //显示数字  6*8字体
 360   1      }
 361          
 362          //--------------------------------------------------------------------------------------------------------
             ------------
 363          //  @brief      OLED显示32位有符号(去除整数部分无效的0)
 364          //  @param      x     x轴坐标设置0-127
 365          //  @param      y           y轴坐标设置0-7
 366          //  @param      dat         需要显示的变量，数据类型uint32
 367          //  @param      num         需要显示的位数 最高10位  不包含正负号
 368          //  @return     void
 369          //  @since      v1.0
 370          //  Sample usage:           oled_printf_int32(0,0,x,5);//x可以为int32 uint16 int16 uint8 int8类型
 371          //  Sample usage:           负数会显示一个 ‘-’号   正数显示一个空格
 372          //--------------------------------------------------------------------------------------------------------
             ------------
 373          void oled_printf_int32(uint16 x,uint16 y,int32 dat,uint8 num)
 374          {
 375   1          int8    buff[34];
 376   1          uint8   length;
 377   1          
 378   1          if(10<num)      num = 10;
 379   1          
 380   1          num++;
 381   1          if(0>dat)   length = zf_sprintf( &buff[0],"%d",dat);//负数
 382   1          else
 383   1          {
 384   2              buff[0] = ' ';
 385   2              length = zf_sprintf( &buff[1],"%d",dat);
 386   2              length++;
 387   2          }
 388   1          while(length < num)
 389   1          {
 390   2              buff[length] = ' ';
 391   2              length++;
C51 COMPILER V9.57.0.0   SEEKFREE_OLED                                                     04/28/2021 20:58:26 PAGE 8   

 392   2          }
 393   1          buff[num] = '\0';
 394   1          
 395   1          oled_p6x8str(x, y, buff); //显示数字
 396   1      }
 397          
 398          //--------------------------------------------------------------------------------------------------------
             ------------
 399          //  @brief      OLED显示浮点数(去除整数部分无效的0)
 400          //  @param      x     x轴坐标设置0-127
 401          //  @param      y           y轴坐标设置0-7
 402          //  @param      dat         需要显示的变量，数据类型float或double
 403          //  @param      num         整数位显示长度   最高10位  
 404          //  @param      pointnum    小数位显示长度   最高6位
 405          //  @return     void
 406          //  @since      v1.0
 407          //  Sample usage:           oled_printf_float(0,0,x,2,3);//显示浮点数   整数显示2位   小数显示三位
 408          //  @note                   特别注意当发现小数部分显示的值与你写入的值不一样的时候，
 409          //                          可能是由于浮点数精度丢失问题导致的，这并不是显示函数的问题，
 410          //                          有关问题的详情，请自行百度学习   浮点数精度丢失问题。
 411          //                          负数会显示一个 ‘-’号   正数显示一个空格
 412          //--------------------------------------------------------------------------------------------------------
             ------------
 413          void oled_printf_float(uint16 x,uint16 y,double dat,uint8 num,uint8 pointnum)
 414          {
 415   1          uint8   length;
 416   1        int8    buff[34];
 417   1        int8    start,end,point;
 418   1      
 419   1        if(6<pointnum)  pointnum = 6;
 420   1          if(10<num)      num = 10;
 421   1              
 422   1          if(0>dat)   length = zf_sprintf( &buff[0],"%f",dat);//负数
 423   1          else
 424   1          {
 425   2              length = zf_sprintf( &buff[1],"%f",dat);
 426   2              length++;
 427   2          }
 428   1          point = length - 7;         //计算小数点位置
 429   1          start = point - num - 1;    //计算起始位
 430   1          end = point + pointnum + 1; //计算结束位
 431   1          while(0>start)//整数位不够  末尾应该填充空格
 432   1          {
 433   2              buff[end] = ' ';
 434   2              end++;
 435   2              start++;
 436   2          }
 437   1          
 438   1          if(0>dat)   buff[start] = '-';
 439   1          else        buff[start] = ' ';
 440   1          
 441   1          buff[end] = '\0';
 442   1          
 443   1          oled_p6x8str(x, y, buff); //显示数字
 444   1      }
 445          
 446          
 447          
 448          //--------------------------------------------------------------------------------------------------------
             ------------
 449          //  @brief      OLED显示图像
 450          //  @param      high      图像高度
C51 COMPILER V9.57.0.0   SEEKFREE_OLED                                                     04/28/2021 20:58:26 PAGE 9   

 451          //  @param      width     图像宽度
 452          //  @param      *p        图像地址（数组）
 453          //  @param      value     二值化阀值
 454          //  @return     void
 455          //  @since      v1.0
 456          //  Sample usage: 
 457          //  @Note       使用Image2lcd V3.2软件取模   C语言数组   水平扫描   
 458          //              宽度高度自行设置   颜色反转  256色
 459          //--------------------------------------------------------------------------------------------------------
             ------------
 460          void oled_dis_bmp(uint16 high, uint16 width, uint8 *p,uint8 value)
 461          {
 462   1          int16 i,j;
 463   1          int16 temp,temp1;
 464   1          uint8 dat;
 465   1          
 466   1          
 467   1          temp1 = high%8;
 468   1          if(temp1 == 0) temp = high/8;
 469   1          else           temp = high/8+1;
 470   1      
 471   1          for(i=0; i<temp; i++)
 472   1          {
 473   2              oled_set_pos(0,i);
 474   2              for(j=0; j<width; j++)
 475   2              {
 476   3                  dat = 0;
 477   3                  if( i<(temp-1) || !temp1 || temp1>=1)dat |= (*(p+i*8*width+j+width*0) > value? 1: 0)<<0;
 478   3                  if( i<(temp-1) || !temp1 || temp1>=2)dat |= (*(p+i*8*width+j+width*1) > value? 1: 0)<<1;
 479   3                  if( i<(temp-1) || !temp1 || temp1>=3)dat |= (*(p+i*8*width+j+width*2) > value? 1: 0)<<2;
 480   3                  if( i<(temp-1) || !temp1 || temp1>=4)dat |= (*(p+i*8*width+j+width*3) > value? 1: 0)<<3;
 481   3                  if( i<(temp-1) || !temp1 || temp1>=5)dat |= (*(p+i*8*width+j+width*4) > value? 1: 0)<<4;
 482   3                  if( i<(temp-1) || !temp1 || temp1>=6)dat |= (*(p+i*8*width+j+width*5) > value? 1: 0)<<5;
 483   3                  if( i<(temp-1) || !temp1 || temp1>=7)dat |= (*(p+i*8*width+j+width*6) > value? 1: 0)<<6;
 484   3                  if( i<(temp-1) || !temp1 || temp1>=8)dat |= (*(p+i*8*width+j+width*7) > value? 1: 0)<<7;
 485   3                 
 486   3                  oled_wrdat(dat);
 487   3              }
 488   2          }
 489   1      }
 490          
 491          //--------------------------------------------------------------------------------------------------------
             ------------
 492          //  @brief      汉字显示
 493          //  @param      x       横坐标 0-127
 494          //  @param      y       纵坐标 0-7
 495          //  @param      size    取模的时候设置的汉字字体大小，也就是一个汉字占用的点阵长宽为多少个点，取模的时候需
             -要长宽是一样的。
 496          //  @param      *p      需要显示的汉字数组
 497          //  @param      len     需要显示多少位
 498          //  @return     void
 499          //  @since      v1.0
 500          //  Sample usage:   
 501          //  @Note       使用PCtoLCD2002软件取模       阴码、逐行式、顺向   16*16
 502          //--------------------------------------------------------------------------------------------------------
             ------------
 503          void oled_print_chinese(uint8 x, uint8 y, uint8 size, const uint8 *p, uint8 len)
 504          {
 505   1          int16 i,j,k;
 506   1          
 507   1          for(i=0; i<len; i++)
 508   1          {
C51 COMPILER V9.57.0.0   SEEKFREE_OLED                                                     04/28/2021 20:58:26 PAGE 10  

 509   2              for(j=0; j<(size/8); j++)
 510   2              {
 511   3                  oled_set_pos(x+i*size,y+j);
 512   3                  for(k=0; k<16; k++)
 513   3                  {
 514   4                      oled_wrdat(*p);
 515   4                      p++;
 516   4                  }
 517   3              }
 518   2          }
 519   1      }
 520          
 521          
 522          //--------------------------------------------------------------------------------------------------------
             ------------
 523          //  以下函数是使用硬件SPI通信，相比较软件IIC，速度比软件IIC快。
 524          //--------------------------------------------------------------------------------------------------------
             ------------
 525          
 526          //--------------------------------------------------------------------------------------------------------
             ------------
 527          //  @brief      内部调用，用户无需关心
 528          //  @param      void        
 529          //  @return             
 530          //  @since      v1.0
 531          //  Sample usage:               
 532          //--------------------------------------------------------------------------------------------------------
             ------------
 533          void oled_wrdat_spi(uint8 dat)
 534          {
 535   1          OLED_SPI_CS(0); //使能信号端，拉低时正常使用
 536   1        OLED_SPI_DC(1);
 537   1        spi_mosi(dat);
 538   1          OLED_SPI_CS(1); //使能信号端，拉低时正常使用
 539   1      
 540   1        
 541   1      }
 542          
 543          //--------------------------------------------------------------------------------------------------------
             ------------
 544          //  @brief      内部调用，用户无需关心
 545          //  @param      void        
 546          //  @return             
 547          //  @since      v1.0
 548          //  Sample usage:               
 549          //--------------------------------------------------------------------------------------------------------
             ------------
 550          //void oled_wr6dat_spi(uint8 dat)
 551          //{
 552          //  uint8 i=6;
 553          //    
 554          //  OLED_SPI_CS(0); //使能信号端，拉低时正常使用
 555          //  OLED_SPI_DC(1);
 556          //  OLED_SCL(0);
 557          //  while(i--)
 558          //  {
 559          //    if(dat&0x80){OLED_SDA(1);}
 560          //    else{OLED_SDA(0);}
 561          //    OLED_SCL(1);
 562          //    OLED_SCL(0);
 563          //    dat<<=1;
 564          //  }
C51 COMPILER V9.57.0.0   SEEKFREE_OLED                                                     04/28/2021 20:58:26 PAGE 11  

 565          //    OLED_SPI_CS(1); //使能信号端，拉低时正常使用
 566          //}
 567          
 568          //--------------------------------------------------------------------------------------------------------
             ------------
 569          //  @brief      内部调用，用户无需关心
 570          //  @param      void        
 571          //  @return             
 572          //  @since      v1.0
 573          //  Sample usage:               
 574          //--------------------------------------------------------------------------------------------------------
             ------------
 575          void oled_wrcmd_spi(uint8 cmd)
 576          {
 577   1        OLED_SPI_CS(0); //使能信号端，拉低时正常使用
 578   1        OLED_SPI_DC(0);
 579   1        spi_mosi(cmd);
 580   1          OLED_SPI_CS(1); //使能信号端，拉低时正常使用
 581   1      }
 582          
 583          //--------------------------------------------------------------------------------------------------------
             ------------
 584          //  @brief      内部调用，用户无需关心
 585          //  @param      void        
 586          //  @return             
 587          //  @since      v1.0
 588          //  Sample usage:               
 589          //--------------------------------------------------------------------------------------------------------
             ------------
 590          void oled_hexascii_spi(uint16 hex,int8 * Print)
 591          {
 592   1        uint8 hexcheck ;
 593   1        uint8 TEMP ;
 594   1        TEMP = 6 ;
 595   1        Print[TEMP ]='\0';
 596   1        while(TEMP)
 597   1        {
 598   2            TEMP -- ;
 599   2            hexcheck  =  hex%10 ;
 600   2            hex   /=10 ;
 601   2            Print[TEMP ]  = hexcheck + 0x30 ;
 602   2        }
 603   1        
 604   1      }
 605          
 606          //--------------------------------------------------------------------------------------------------------
             ------------
 607          //  @brief      OLED初始化函数
 608          //  @param      NULL
 609          //  @return     void
 610          //  @since      v1.0
 611          //  Sample usage:     
 612          //--------------------------------------------------------------------------------------------------------
             ------------
 613          void oled_init_spi(void)
 614          {
 615   1        
 616   1          OLED_SPI_CS(1);
 617   1        
 618   1          spi_init(OLED_SPI_N, OLED_SPI_SCLK_PIN, OLED_SPI_MOSI_PIN, OLED_SPI_MISO_PIN, 0, MASTER, SPI_SYSclk_DI
             -V_4);
 619   1        
C51 COMPILER V9.57.0.0   SEEKFREE_OLED                                                     04/28/2021 20:58:26 PAGE 12  

 620   1        OLED_SPI_RST(0);
 621   1        delay_ms(50);
 622   1        OLED_SPI_RST(1);
 623   1        
 624   1        oled_wrcmd_spi(0xae);//--turn off oled panel
 625   1        oled_wrcmd_spi(0x00);//---set low column address
 626   1        oled_wrcmd_spi(0x10);//---set high column address
 627   1        oled_wrcmd_spi(0x40);//--set start line address  Set Mapping RAM Display Start Line (0x00~0x3F)
 628   1        oled_wrcmd_spi(0x81);//--set contrast control register
 629   1        oled_wrcmd_spi(Brightness); // Set SEG Output Current Brightness
 630   1          
 631   1      #if (0 == OLED_DISPLAY_DIR)
 632   1        oled_wrcmd_spi(0xa1);//--Set SEG/Column Mapping     0xa0左右反置 0xa1正常
 633   1        oled_wrcmd_spi(0xc8);//Set COM/Row Scan Direction   0xc0上下反置 0xc8正常
 634   1      #else
                  oled_wrcmd_spi(0xa0);//--Set SEG/Column Mapping     0xa0左右反置 0xa1正常
                oled_wrcmd_spi(0xc0);//Set COM/Row Scan Direction   0xc0上下反置 0xc8正常
              #endif
 638   1          
 639   1        oled_wrcmd_spi(0xa6);//--set normal display
 640   1        oled_wrcmd_spi(0xa8);//--set multiplex ratio(1 to 64)
 641   1        oled_wrcmd_spi(0x3f);//--1/64 duty
 642   1        oled_wrcmd_spi(0xd3);//-set display offset  Shift Mapping RAM Counter (0x00~0x3F)
 643   1        oled_wrcmd_spi(0x00);//-not offset
 644   1        oled_wrcmd_spi(0xd5);//--set display clock divide ratio/oscillator frequency
 645   1        oled_wrcmd_spi(0x80);//--set divide ratio, Set Clock as 100 Frames/Sec
 646   1        oled_wrcmd_spi(0xd9);//--set pre-charge period
 647   1        oled_wrcmd_spi(0xf1);//Set Pre-Charge as 15 Clocks & Discharge as 1 Clock
 648   1        oled_wrcmd_spi(0xda);//--set com pins hardware configuration
 649   1        oled_wrcmd_spi(0x12);
 650   1        oled_wrcmd_spi(0xdb);//--set vcomh
 651   1        oled_wrcmd_spi(0x40);//Set VCOM Deselect Level
 652   1        oled_wrcmd_spi(0x20);//-Set Page Addressing Mode (0x00/0x01/0x02)
 653   1        oled_wrcmd_spi(0x02);//
 654   1        oled_wrcmd_spi(0x8d);//--set Charge Pump enable/disable
 655   1        oled_wrcmd_spi(0x14);//--set(0x10) disable
 656   1        oled_wrcmd_spi(0xa4);// Disable Entire Display On (0xa4/0xa5)
 657   1        oled_wrcmd_spi(0xa6);// Disable Inverse Display On (0xa6/a7)
 658   1        oled_wrcmd_spi(0xaf);//--turn on oled panel
 659   1        oled_fill_spi(0x00);  //初始清屏
 660   1        oled_set_pos_spi(0,0);
 661   1      }
 662          
 663          //--------------------------------------------------------------------------------------------------------
             ------------
 664          //  @brief      OLED显示坐标设置
 665          //  @param      x     x轴坐标设置0-127
 666          //  @param      y           y轴坐标设置0-7
 667          //  @return     void
 668          //  @since      v1.0
 669          //  Sample usage:     
 670          //--------------------------------------------------------------------------------------------------------
             ------------
 671          void oled_set_pos_spi(uint8 x, uint8 y)
 672          {
 673   1      
 674   1          
 675   1          oled_wrcmd_spi(0xb0+y);
 676   1          oled_wrcmd_spi(((x&0xf0)>>4)|0x10);
 677   1          oled_wrcmd_spi((x&0x0f)|0x00);
 678   1      }
 679          
C51 COMPILER V9.57.0.0   SEEKFREE_OLED                                                     04/28/2021 20:58:26 PAGE 13  

 680          //--------------------------------------------------------------------------------------------------------
             ------------
 681          //  @brief      OLED清屏函数
 682          //  @param      bmp_data  填充颜色选着(0x00 or 0xff)
 683          //  @return     void
 684          //  @since      v1.0
 685          //  Sample usage:     
 686          //--------------------------------------------------------------------------------------------------------
             ------------
 687          void oled_fill_spi(uint8 bmp_data)
 688          {
 689   1        uint8 y,x;
 690   1        
 691   1        for(y=0;y<8;y++)
 692   1        {
 693   2          oled_wrcmd_spi(0xb0+y);
 694   2          oled_wrcmd_spi(0x01);
 695   2          oled_wrcmd_spi(0x10);
 696   2          for(x=0;x<X_WIDTH;x++)  oled_wrdat_spi(bmp_data); 
 697   2        }
 698   1      }
 699          
 700          
 701          //--------------------------------------------------------------------------------------------------------
             ------------
 702          //  @brief      OLED控制一个坐标下8个像素的点亮与熄灭
 703          //  @param      x     x轴坐标设置0-127
 704          //  @param      y           y轴坐标设置0-7
 705          //  @return     void
 706          //  @since      v1.0
 707          //  Sample usage:     oled_putpixel(0,0,0xff);//将0,0坐标 8个点全部点亮
 708          //  Sample usage:     oled_putpixel(0,0,0x01);//将0,0坐标 最低位点亮其余7个熄灭
 709          //  @note                   同理可以任意控制一个坐标下8个像素的点亮与熄灭
 710          //--------------------------------------------------------------------------------------------------------
             ------------
 711          void oled_putpixel_spi(uint8 x,uint8 y,uint8 data1)
 712          {
 713   1        oled_set_pos_spi(x,y);
 714   1          oled_wrcmd_spi(0xb0+y);
 715   1        oled_wrcmd_spi(((x&0xf0)>>4)|0x10);
 716   1        oled_wrcmd_spi((x&0x0f)|0x00);
 717   1        oled_wrdat_spi(data1);
 718   1      }
 719          
 720          //--------------------------------------------------------------------------------------------------------
             ------------
 721          //  @brief      OLED关闭一个坐标所有亮点
 722          //  @param      x     x轴坐标设置0-127
 723          //  @param      y           y轴坐标设置0-7
 724          //  @return     void
 725          //  @since      v1.0
 726          //  Sample usage:     
 727          //--------------------------------------------------------------------------------------------------------
             ------------
 728          void oled_clrpixel_spi(uint8 x,uint8 y)
 729          {
 730   1        oled_set_pos_spi(x,y);
 731   1          oled_wrcmd_spi(0xb0+y);
 732   1        oled_wrcmd_spi(((x&0xf0)>>4)|0x10);
 733   1        oled_wrcmd_spi((x&0x0f)|0x00);
 734   1        oled_wrdat_spi(0x00);
 735   1      }
C51 COMPILER V9.57.0.0   SEEKFREE_OLED                                                     04/28/2021 20:58:26 PAGE 14  

 736          
 737          
 738          //--------------------------------------------------------------------------------------------------------
             ------------
 739          //  @brief      OLED显示字符串(6*8字体)
 740          //  @param      x     x轴坐标设置0-127
 741          //  @param      y           y轴坐标设置0-7
 742          //  @param      ch[]        字符串
 743          //  @return     void
 744          //  @since      v1.0
 745          //  Sample usage:     
 746          //--------------------------------------------------------------------------------------------------------
             ------------
 747          void oled_p6x8str_spi(uint8 x,uint8 y,const int8 ch[])
 748          {
 749   1        uint8 c=0,i=0,j=0;
 750   1        while (ch[j]!='\0')
 751   1        {
 752   2            c =ch[j]-32;
 753   2            if(x>126){x=0;y++;}
 754   2            oled_set_pos_spi(x,y);
 755   2            for(i=0;i<6;i++)  oled_wrdat_spi(oled_6x8[c][i]);
 756   2            x+=6;
 757   2            j++;
 758   2        }
 759   1      }
 760          
 761          //--------------------------------------------------------------------------------------------------------
             ------------
 762          //  @brief      OLED显示字符串(8*16字体)
 763          //  @param      x     x轴坐标设置0-127
 764          //  @param      y           y轴坐标设置0-7
 765          //  @param      ch[]        字符串
 766          //  @return     void
 767          //  @since      v1.0
 768          //  Sample usage:     务必注意，本函数字符列高位16，因此y应该是每次递增2
 769          //--------------------------------------------------------------------------------------------------------
             ------------
 770          void oled_p8x16str_spi(uint8 x,uint8 y,const int8 ch[])
 771          {
 772   1        uint8 c=0,i=0,j=0;
 773   1        
 774   1        while (ch[j]!='\0')
 775   1        {
 776   2            c =ch[j]-32;
 777   2            if(x>120){x=0;y++;}
 778   2          
 779   2            oled_set_pos_spi(x,y);
 780   2            for(i=0;i<8;i++)  oled_wrdat_spi(oled_8x16[c*16+i]);
 781   2              
 782   2            oled_set_pos_spi(x,y+1);
 783   2            for(i=0;i<8;i++)  oled_wrdat_spi(oled_8x16[c*16+i+8]);
 784   2              
 785   2            x+=8;
 786   2            j++;
 787   2        }
 788   1      }
 789          
 790          //--------------------------------------------------------------------------------------------------------
             ------------
 791          //  @brief      OLED显示无符号数(6*8字体)
 792          //  @param      x     x轴坐标设置0-127
C51 COMPILER V9.57.0.0   SEEKFREE_OLED                                                     04/28/2021 20:58:26 PAGE 15  

 793          //  @param      y           y轴坐标设置0-7
 794          //  @param      num         无符号数
 795          //  @return     void
 796          //  @since      v1.0
 797          //  Sample usage:     
 798          //--------------------------------------------------------------------------------------------------------
             ------------
 799          void oled_uint16_spi(uint8 x, uint8 y, uint16 num)
 800          {
 801   1        int8 ch[7];
 802   1        
 803   1        oled_hexascii_spi(num,ch);
 804   1          
 805   1          oled_p6x8str_spi(x, y, &ch[1]);     //显示数字  6*8字体
 806   1          //oled_p8x16str(x, y, &ch[1]);  //显示数字  8*16字体
 807   1      }
 808          
 809          //--------------------------------------------------------------------------------------------------------
             ------------
 810          //  @brief      OLED显示有符号数(6*8字体)
 811          //  @param      x     x轴坐标设置0-127
 812          //  @param      y           y轴坐标设置0-7
 813          //  @param      num         有符号数
 814          //  @return     void
 815          //  @since      v1.0
 816          //  Sample usage:     
 817          //--------------------------------------------------------------------------------------------------------
             ------------
 818          void oled_int16_spi(uint8 x, uint8 y, int16 num)
 819          {
 820   1        int8 ch[7];
 821   1        if(num<0)   {num = -num;oled_p6x8str_spi(x, y, "-");}
 822   1        else         oled_p6x8str_spi(x, y, " ");
 823   1        x+=6;       
 824   1          
 825   1        oled_hexascii_spi(num,ch);
 826   1          oled_p6x8str_spi(x, y, &ch[1]);     //显示数字  6*8字体
 827   1      }
 828          
 829          //--------------------------------------------------------------------------------------------------------
             ------------
 830          //  @brief      OLED显示32位有符号(去除整数部分无效的0)
 831          //  @param      x     x轴坐标设置0-127
 832          //  @param      y           y轴坐标设置0-7
 833          //  @param      dat         需要显示的变量，数据类型uint32
 834          //  @param      num         需要显示的位数 最高10位  不包含正负号
 835          //  @return     void
 836          //  @since      v1.0
 837          //  Sample usage:           oled_printf_int32(0,0,x,5);//x可以为int32 uint16 int16 uint8 int8类型
 838          //  Sample usage:           负数会显示一个 ‘-’号   正数显示一个空格
 839          //--------------------------------------------------------------------------------------------------------
             ------------
 840          void oled_printf_int32_spi(uint16 x,uint16 y,int32 dat,uint8 num)
 841          {
 842   1          int8    buff[34];
 843   1          uint8   length;
 844   1          
 845   1          if(10<num)      num = 10;
 846   1          
 847   1          num++;
 848   1          if(0>dat)   length = zf_sprintf( &buff[0],"%d",dat);//负数
 849   1          else
C51 COMPILER V9.57.0.0   SEEKFREE_OLED                                                     04/28/2021 20:58:26 PAGE 16  

 850   1          {
 851   2              buff[0] = ' ';
 852   2              length = zf_sprintf( &buff[1],"%d",dat);
 853   2              length++;
 854   2          }
 855   1          while(length < num)
 856   1          {
 857   2              buff[length] = ' ';
 858   2              length++;
 859   2          }
 860   1          buff[num] = '\0';
 861   1          
 862   1          oled_p6x8str_spi(x, y, buff); //显示数字
 863   1      }
 864          
 865          //--------------------------------------------------------------------------------------------------------
             ------------
 866          //  @brief      OLED显示浮点数(去除整数部分无效的0)
 867          //  @param      x     x轴坐标设置0-127
 868          //  @param      y           y轴坐标设置0-7
 869          //  @param      dat         需要显示的变量，数据类型float或double
 870          //  @param      num         整数位显示长度   最高10位  
 871          //  @param      pointnum    小数位显示长度   最高6位
 872          //  @return     void
 873          //  @since      v1.0
 874          //  Sample usage:           oled_printf_float(0,0,x,2,3);//显示浮点数   整数显示2位   小数显示三位
 875          //  @note                   特别注意当发现小数部分显示的值与你写入的值不一样的时候，
 876          //                          可能是由于浮点数精度丢失问题导致的，这并不是显示函数的问题，
 877          //                          有关问题的详情，请自行百度学习   浮点数精度丢失问题。
 878          //                          负数会显示一个 ‘-’号   正数显示一个空格
 879          //--------------------------------------------------------------------------------------------------------
             ------------
 880          void oled_printf_float_spi(uint16 x,uint16 y,double dat,uint8 num,uint8 pointnum)
 881          {
 882   1          uint8   length;
 883   1        int8    buff[34];
 884   1        int8    start,end,point;
 885   1      
 886   1        if(6<pointnum)  pointnum = 6;
 887   1          if(10<num)      num = 10;
 888   1              
 889   1          if(0>dat)   length = zf_sprintf( &buff[0],"%f",dat);//负数
 890   1          else
 891   1          {
 892   2              length = zf_sprintf( &buff[1],"%f",dat);
 893   2              length++;
 894   2          }
 895   1          point = length - 7;         //计算小数点位置
 896   1          start = point - num - 1;    //计算起始位
 897   1          end = point + pointnum + 1; //计算结束位
 898   1          while(0>start)//整数位不够  末尾应该填充空格
 899   1          {
 900   2              buff[end] = ' ';
 901   2              end++;
 902   2              start++;
 903   2          }
 904   1          
 905   1          if(0>dat)   buff[start] = '-';
 906   1          else        buff[start] = ' ';
 907   1          
 908   1          buff[end] = '\0';
 909   1          
C51 COMPILER V9.57.0.0   SEEKFREE_OLED                                                     04/28/2021 20:58:26 PAGE 17  

 910   1          oled_p6x8str_spi(x, y, buff); //显示数字
 911   1      }
 912          
 913          
 914          
 915          //--------------------------------------------------------------------------------------------------------
             ------------
 916          //  @brief      OLED显示图像
 917          //  @param      high      图像高度
 918          //  @param      width     图像宽度
 919          //  @param      *p        图像地址（数组）
 920          //  @param      value     二值化阀值
 921          //  @return     void
 922          //  @since      v1.0
 923          //  Sample usage: 
 924          //  @Note       使用Image2lcd V3.2软件取模   C语言数组   水平扫描   
 925          //              宽度高度自行设置   颜色反转  256色
 926          //--------------------------------------------------------------------------------------------------------
             ------------
 927          void oled_dis_bmp_spi(uint16 high, uint16 width, uint8 *p,uint8 value)
 928          {
 929   1          int16 i,j;
 930   1          int16 temp,temp1;
 931   1          uint8 dat;
 932   1          
 933   1          
 934   1          temp1 = high%8;
 935   1          if(temp1 == 0) temp = high/8;
 936   1          else           temp = high/8+1;
 937   1      
 938   1          for(i=0; i<temp; i++)
 939   1          {
 940   2              oled_set_pos_spi(0,i);
 941   2              for(j=0; j<width; j++)
 942   2              {
 943   3                  dat = 0;
 944   3                  if( i<(temp-1) || !temp1 || temp1>=1)dat |= (*(p+i*8*width+j+width*0) > value? 1: 0)<<0;
 945   3                  if( i<(temp-1) || !temp1 || temp1>=2)dat |= (*(p+i*8*width+j+width*1) > value? 1: 0)<<1;
 946   3                  if( i<(temp-1) || !temp1 || temp1>=3)dat |= (*(p+i*8*width+j+width*2) > value? 1: 0)<<2;
 947   3                  if( i<(temp-1) || !temp1 || temp1>=4)dat |= (*(p+i*8*width+j+width*3) > value? 1: 0)<<3;
 948   3                  if( i<(temp-1) || !temp1 || temp1>=5)dat |= (*(p+i*8*width+j+width*4) > value? 1: 0)<<4;
 949   3                  if( i<(temp-1) || !temp1 || temp1>=6)dat |= (*(p+i*8*width+j+width*5) > value? 1: 0)<<5;
 950   3                  if( i<(temp-1) || !temp1 || temp1>=7)dat |= (*(p+i*8*width+j+width*6) > value? 1: 0)<<6;
 951   3                  if( i<(temp-1) || !temp1 || temp1>=8)dat |= (*(p+i*8*width+j+width*7) > value? 1: 0)<<7;
 952   3                 
 953   3                  oled_wrdat_spi(dat);
 954   3              }
 955   2          }
 956   1      }
 957          
 958          //--------------------------------------------------------------------------------------------------------
             ------------
 959          //  @brief      汉字显示
 960          //  @param      x       横坐标 0-127
 961          //  @param      y       纵坐标 0-7
 962          //  @param      size    取模的时候设置的汉字字体大小，也就是一个汉字占用的点阵长宽为多少个点，取模的时候需
             -要长宽是一样的。
 963          //  @param      *p      需要显示的汉字数组
 964          //  @param      len     需要显示多少位
 965          //  @return     void
 966          //  @since      v1.0
 967          //  Sample usage:   
C51 COMPILER V9.57.0.0   SEEKFREE_OLED                                                     04/28/2021 20:58:26 PAGE 18  

 968          //  @Note       使用PCtoLCD2002软件取模       阴码、逐行式、顺向   16*16
 969          //--------------------------------------------------------------------------------------------------------
             ------------
 970          void oled_print_chinese_spi(uint8 x, uint8 y, uint8 size, const uint8 *p, uint8 len)
 971          {
 972   1          int16 i,j,k;
 973   1          
 974   1          for(i=0; i<len; i++)
 975   1          {
 976   2              for(j=0; j<(size/8); j++)
 977   2              {
 978   3                  oled_set_pos_spi(x+i*size,y+j);
 979   3                  for(k=0; k<16; k++)
 980   3                  {
 981   4                      oled_wrdat_spi(*p);
 982   4                      p++;
 983   4                  }
 984   3              }
 985   2          }
 986   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   6521    ----
   CONSTANT SIZE    =     10    ----
   XDATA SIZE       =   ----     335
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)

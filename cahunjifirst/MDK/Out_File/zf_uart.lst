C51 COMPILER V9.57.0.0   ZF_UART                                                           04/28/2021 20:58:25 PAGE 1   


C51 COMPILER V9.57.0.0, COMPILATION OF MODULE ZF_UART
OBJECT MODULE PLACED IN .\Out_File\zf_uart.obj
COMPILER INVOKED BY: E:\keil5\anzhuang\C51\BIN\C51.EXE ..\..\Libraries\seekfree_libraries\zf_uart.c LARGE OMF2 OPTIMIZE(
                    -8,SPEED) BROWSE INCDIR(..\..\Libraries\libraries;..\..\Libraries\seekfree_libraries;..\..\Libraries\seekfree_peripheral;
                    -..\USER\inc;..\USER\src;..\CODE;.\HARDWORE\Data;.\HARDWORE\DianGan;.\HARDWORE\FusionAngle;.\HARDWORE\BianMaQi;.\HARDWORE
                    -\ShangWeiJi;.\HARDWORE;.\HARDWORE\Balance;.\KaErMan) DEBUG PRINT(.\Out_File\zf_uart.lst) TABS(2) OBJECT(.\Out_File\zf_ua
                    -rt.obj)

line level    source

   1          /*********************************************************************************************************
             -************
   2           * COPYRIGHT NOTICE
   3           * Copyright (c) 2020,逐飞科技
   4           * All rights reserved.
   5           * 技术讨论QQ群：一群：179029047(已满)  二群：244861897(已满)  三群：824575535
   6           *
   7           * 以下所有内容版权均属逐飞科技所有，未经允许不得用于商业用途，
   8           * 欢迎各位使用并传播本程序，修改内容时必须保留逐飞科技的版权声明。
   9           *
  10           * @file          uart
  11           * @company       成都逐飞科技有限公司
  12           * @author        逐飞科技(QQ790875685)
  13           * @version       查看doc内version文件 版本说明
  14           * @Software    MDK FOR C51 V9.60
  15           * @Target core   STC8H8K64S4
  16           * @Taobao      https://seekfree.taobao.com/
  17           * @date          2020-4-14
  18           *********************************************************************************************************
             -***********/
  19          
  20          #include "zf_uart.h"
  21          #include "board.h"
  22          
  23          
  24          
  25          uint8 busy[5];         //接收忙标志位
  26          
  27          uint8 xdata uart1_tx_buff[UART1_TX_BUFFER_SIZE];  //发送缓冲
  28          uint8 xdata uart1_rx_buff[UART1_RX_BUFFER_SIZE];  //接收缓冲
  29          
  30          
  31          //--------------------------------------------------------------------------------------------------------
             ------------
  32          //  @brief      串口初始化
  33          //  @param      uart_n          串口模块号(USART_1,USART_2,USART_3,USART_4)
  34          //  @param      uart_rx_pin     串口波特率
  35          //  @param      uart_tx_pin     串口接收发送引脚
  36          //  @param      baud          串口接收发送引脚
  37          //  @param      tim_n         使用tim_n作为串口波特率发生器(TIM1-TIM4)
  38          //  @return     NULL            
  39          //  Sample usage:               uart_init(USART_1, UART1_RX_P30, UART1_TX_P31, 115200, TIM2);       //初始
             -化串口1 波特率115200 发送引脚使用P31 接收引脚使用P30 ,使用定时器2作为波特率发生器
  40          //  @note                       串口1使用 定时器1或者定时器2 作为波特率发生器。
  41          //                串口2使用 定时器2        作为波特率发生器。
  42          //                串口3使用 定时器3或者定时器2 作为波特率发生器。
  43          //                串口4使用 定时器4或者定时器2 作为波特率发生器。
  44          //                              STC8H仅有 定时器0-定时器4，这5个定时器。
  45          //                编码器采集数据也需要定时器作为外部计数。
  46          //                如果不同的串口，使用同一个定时器，串口的波特率以最后一个初始化为准
  47          //--------------------------------------------------------------------------------------------------------
C51 COMPILER V9.57.0.0   ZF_UART                                                           04/28/2021 20:58:25 PAGE 2   

             ------------
  48          void uart_init(UARTN_enum uart_n, UARTPIN_enum uart_rx_pin, UARTPIN_enum uart_tx_pin, uint32 baud, TIMN_en
             -um tim_n)
  49          {
  50   1          uint16 brt;
  51   1      
  52   1          brt = 65536 - sys_clk/baud/4;
  53   1      
  54   1        switch(uart_n)
  55   1        {
  56   2          case UART_1:
  57   2          {
  58   3            if(TIM_1 == tim_n)
  59   3            {
  60   4              SCON |= 0x50;
  61   4              TMOD |= 0x00;
  62   4              TL1 = brt;
  63   4              TH1 = brt >> 8;
  64   4              AUXR |= 0x40;
  65   4              TR1 = 1;
  66   4              busy[1] = 0;
  67   4            }
  68   3            else if(TIM_2 == tim_n)
  69   3            {
  70   4              SCON |= 0x50;
  71   4              T2L = brt;
  72   4              T2H = brt >> 8;
  73   4              AUXR |= 0x15;
  74   4            }
  75   3            P_SW1 &= ~(0x03<<6);
  76   3            if((UART1_RX_P30 == uart_rx_pin) && (UART1_TX_P31 == uart_tx_pin))
  77   3            {
  78   4              P_SW1 |= 0x00;
  79   4            }
  80   3            else if((UART1_RX_P36 == uart_rx_pin) && (UART1_TX_P37 == uart_tx_pin))
  81   3            {
  82   4              P_SW1 |= 0x40;
  83   4            }
  84   3            else if((UART1_RX_P16 == uart_rx_pin) && (UART1_TX_P17 == uart_tx_pin))
  85   3            {
  86   4              P_SW1 |= 0x80;
  87   4            }
  88   3            else if((UART1_RX_P43 == uart_rx_pin) && (UART1_TX_P44 == uart_tx_pin))
  89   3            {
  90   4              P_SW1 |= 0xc0;
  91   4            }
  92   3            busy[1] = 0;
  93   3            ES = 1;
  94   3            break;
  95   3          }
  96   2          
  97   2          case UART_2:
  98   2          {
  99   3            if(TIM_2 == tim_n)
 100   3            {
 101   4              S2CON |= 0x10;
 102   4              T2L = brt;
 103   4              T2H = brt >> 8;
 104   4              AUXR |= 0x14;
 105   4            }
 106   3            
 107   3            P_SW2 &= ~(0x01<<0);
C51 COMPILER V9.57.0.0   ZF_UART                                                           04/28/2021 20:58:25 PAGE 3   

 108   3            if((UART2_RX_P10 == uart_rx_pin) && (UART2_TX_P11 == uart_tx_pin))
 109   3            {
 110   4              P_SW2 |= 0x00;
 111   4            }
 112   3            else if((UART2_RX_P46 == uart_rx_pin) && (UART2_TX_P47 == uart_tx_pin))
 113   3            {
 114   4              P_SW2 |= 0x01;
 115   4            }
 116   3            
 117   3            IE2 |= 0x01 << 0; //允许串行口2中断
 118   3            busy[2] = 0;
 119   3            break;
 120   3          }
 121   2          
 122   2          case UART_3:
 123   2          {
 124   3            if(TIM_2 == tim_n)
 125   3            {
 126   4              S2CON |= 0x10;
 127   4              T2L = brt;
 128   4              T2H = brt >> 8;
 129   4              AUXR |= 0x14;
 130   4            }
 131   3            else if(TIM_3 == tim_n)
 132   3            {
 133   4              S3CON |= 0x50;
 134   4              T3L = brt;
 135   4              T3H = brt >> 8;
 136   4              T4T3M |= 0x0a;
 137   4            }
 138   3            
 139   3            P_SW2 &= ~(0x01<<1);
 140   3            if((UART3_RX_P00 == uart_rx_pin) && (UART3_TX_P01 == uart_tx_pin))
 141   3            {
 142   4              P_SW2 |= 0x00;
 143   4            }
 144   3            else if((UART3_RX_P50 == uart_rx_pin) && (UART3_TX_P51 == uart_tx_pin))
 145   3            {
 146   4              P_SW2 |= 0x02;
 147   4            }
 148   3            
 149   3            IE2 |= 0x01<<3; //允许串行口3中断
 150   3            busy[3] = 0;
 151   3            break;
 152   3          }
 153   2          
 154   2          case UART_4:
 155   2          {
 156   3            if(TIM_2 == tim_n)
 157   3            {
 158   4              S4CON |= 0x10;
 159   4              T2L = brt;
 160   4              T2H = brt >> 8;
 161   4              AUXR |= 0x14;
 162   4            }
 163   3            else if(TIM_4 == tim_n)
 164   3            {
 165   4              S4CON |= 0x50;
 166   4              T4L = brt;
 167   4              T4H = brt >> 8;
 168   4              T4T3M |= 0xa0;
 169   4            }
C51 COMPILER V9.57.0.0   ZF_UART                                                           04/28/2021 20:58:25 PAGE 4   

 170   3      
 171   3            P_SW2 &= ~(0x01<<2);
 172   3            if((UART4_RX_P02 == uart_rx_pin) && (UART4_TX_P03 == uart_tx_pin))
 173   3            {
 174   4              P_SW2 |= 0x00;
 175   4            }
 176   3            else if((UART4_RX_P52 == uart_rx_pin) && (UART4_TX_P53 == uart_tx_pin))
 177   3            {
 178   4              P5M0 = 0x00;
 179   4              P5M1 = 0x01<<2;//P5.2 需要设置为高阻
 180   4              P_SW2 |= 0x04;
 181   4            }
 182   3            IE2 |= 0x01<<4; //允许串行口4中断
 183   3            busy[4] = 0;
 184   3            break;
 185   3          }
 186   2          
 187   2        }
 188   1      
 189   1      }
 190          
 191          //--------------------------------------------------------------------------------------------------------
             ------------
 192          //  @brief      串口字节输出
 193          //  @param      uart_n          串口模块号(USART_1,USART_2,USART_3,USART_4)
 194          //  @param      dat             需要发送的字节
 195          //  @return     void        
 196          //  Sample usage:               uart_putchar(UART_1,0xA5);       // 串口1发送0xA5
 197          //--------------------------------------------------------------------------------------------------------
             ------------
 198          void uart_putchar(UARTN_enum uart_n,uint8 dat)
 199          {
 200   1        switch(uart_n)
 201   1        {
 202   2          case UART_1:
 203   2            while (busy[1]);
 204   2            busy[1] = 1;
 205   2            SBUF = dat;
 206   2              break;
 207   2          case UART_2:
 208   2            while (busy[2]);
 209   2            busy[2] = 1;
 210   2            S2BUF = dat;
 211   2              break;
 212   2          case UART_3:
 213   2            while (busy[3]);
 214   2            busy[3] = 1;
 215   2            S3BUF = dat;
 216   2              break;
 217   2          case UART_4:
 218   2            while (busy[4]);
 219   2            busy[4] = 1;
 220   2            S4BUF = dat;
 221   2              break;
 222   2        }
 223   1      }
 224          
 225          
 226          //--------------------------------------------------------------------------------------------------------
             ------------
 227          //  @brief      串口发送数组
 228          //  @param      uart_n          串口模块号(USART_1,USART_2,USART_3,USART_4)
C51 COMPILER V9.57.0.0   ZF_UART                                                           04/28/2021 20:58:25 PAGE 5   

 229          //  @param      *buff           要发送的数组地址
 230          //  @param      len             发送长度
 231          //  @return     void
 232          //  Sample usage:               uart_putbuff(UART_1,&a[0],5);
 233          //--------------------------------------------------------------------------------------------------------
             ------------
 234          void uart_putbuff(UARTN_enum uart_n,uint8 *p,uint16 len)
 235          {
 236   1          while(len--)
 237   1              uart_putchar(uart_n,*p++);
 238   1      }
 239          
 240          
 241          //--------------------------------------------------------------------------------------------------------
             ------------
 242          //  @brief      串口发送字符串
 243          //  @param      uart_n          串口模块号(USART_1,USART_2,USART_3,USART_4)
 244          //  @param      *str            要发送的字符串地址
 245          //  @return     void
 246          //  Sample usage:               uart_putstr(UART_1,"i lvoe you"); 
 247          //--------------------------------------------------------------------------------------------------------
             ------------
 248          void uart_putstr(UARTN_enum uart_n,uint8 *str,uint16 len)
 249          {
 250   1          while(len--)
 251   1              uart_putchar(uart_n,*str++);
 252   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    574    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =    205      20
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)

C51 COMPILER V9.57.0.0   KAERMAN                                                           04/28/2021 20:58:27 PAGE 1   


C51 COMPILER V9.57.0.0, COMPILATION OF MODULE KAERMAN
OBJECT MODULE PLACED IN .\Out_File\kaerman.obj
COMPILER INVOKED BY: E:\keil5\anzhuang\C51\BIN\C51.EXE KaErMan\kaerman.c LARGE OMF2 OPTIMIZE(8,SPEED) BROWSE INCDIR(..\.
                    -.\Libraries\libraries;..\..\Libraries\seekfree_libraries;..\..\Libraries\seekfree_peripheral;..\USER\inc;..\USER\src;..\
                    -CODE;.\HARDWORE\Data;.\HARDWORE\DianGan;.\HARDWORE\FusionAngle;.\HARDWORE\BianMaQi;.\HARDWORE\ShangWeiJi;.\HARDWORE;.\HA
                    -RDWORE\Balance;.\KaErMan) DEBUG PRINT(.\Out_File\kaerman.lst) TABS(2) OBJECT(.\Out_File\kaerman.obj)

line level    source

   1          #include "kaerman.h"
   2          #include "math.h"
   3          
   4          float dt=0.01;//注意：dt的取值为kalman滤波器采样时间
   5          float angle, angle_dot;//角度和角速度
   6          float PP[2][2] = {{ 1, 0 },{ 0, 1 }};
   7          float Pdot[4] ={ 0,0,0,0};
   8          float Q_angle=0.001, Q_gyro=0.005; //角度数据置信度,角速度数据置信度
   9          float R_angle=0.5 ,C_0 = 1;
  10          float q_bias, angle_err, PCt_0, PCt_1, E, K_0, K_1, t_0, t_1;
  11          //卡尔曼滤波
  12          float Kalman_Filter(float angle_m, float gyro_m)//angleAx 和 gyroGy
  13          {
  14   1      
  15   1              angle+=(gyro_m-q_bias) * dt;
  16   1      
  17   1              angle_err = angle_m - angle;
  18   1      
  19   1              Pdot[0]=Q_angle - PP[0][1] - PP[1][0];
  20   1      
  21   1              Pdot[1]=- PP[1][1];
  22   1      
  23   1              Pdot[2]=- PP[1][1];
  24   1      
  25   1              Pdot[3]=Q_gyro;
  26   1      
  27   1              PP[0][0] += Pdot[0] * dt;
  28   1      
  29   1              PP[0][1] += Pdot[1] * dt;
  30   1      
  31   1              PP[1][0] += Pdot[2] * dt;
  32   1      
  33   1              PP[1][1] += Pdot[3] * dt;
  34   1      
  35   1              PCt_0 = C_0 * PP[0][0];
  36   1      
  37   1              PCt_1 = C_0 * PP[1][0];
  38   1      
  39   1              E = R_angle + C_0 * PCt_0;
  40   1      
  41   1              K_0 = PCt_0 / E;
  42   1      
  43   1              K_1 = PCt_1 / E;
  44   1      
  45   1              t_0 = PCt_0;
  46   1      
  47   1              t_1 = C_0 * PP[0][1];
  48   1      
  49   1              PP[0][0] -= K_0 * t_0;
  50   1      
  51   1              PP[0][1] -= K_0 * t_1;
  52   1      
C51 COMPILER V9.57.0.0   KAERMAN                                                           04/28/2021 20:58:27 PAGE 2   

  53   1              PP[1][0] -= K_1 * t_0;
  54   1      
  55   1              PP[1][1] -= K_1 * t_1;
  56   1      
  57   1              angle += K_0 * angle_err; //最优角度
  58   1      
  59   1              q_bias += K_1 * angle_err;
  60   1      
  61   1              angle_dot = gyro_m-q_bias;//最优角速度
  62   1      
  63   1              return angle;
  64   1      
  65   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1293    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =     96       8
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)

C51 COMPILER V9.57.0.0   ZF_GPIO                                                           04/28/2021 20:58:25 PAGE 1   


C51 COMPILER V9.57.0.0, COMPILATION OF MODULE ZF_GPIO
OBJECT MODULE PLACED IN .\Out_File\zf_gpio.obj
COMPILER INVOKED BY: E:\keil5\anzhuang\C51\BIN\C51.EXE ..\..\Libraries\seekfree_libraries\zf_gpio.c LARGE OMF2 OPTIMIZE(
                    -8,SPEED) BROWSE INCDIR(..\..\Libraries\libraries;..\..\Libraries\seekfree_libraries;..\..\Libraries\seekfree_peripheral;
                    -..\USER\inc;..\USER\src;..\CODE;.\HARDWORE\Data;.\HARDWORE\DianGan;.\HARDWORE\FusionAngle;.\HARDWORE\BianMaQi;.\HARDWORE
                    -\ShangWeiJi;.\HARDWORE;.\HARDWORE\Balance;.\KaErMan) DEBUG PRINT(.\Out_File\zf_gpio.lst) TABS(2) OBJECT(.\Out_File\zf_gp
                    -io.obj)

line level    source

   1          /*********************************************************************************************************
             -************
   2           * COPYRIGHT NOTICE
   3           * Copyright (c) 2020,逐飞科技
   4           * All rights reserved.
   5           * 技术讨论QQ群：一群：179029047(已满)  二群：244861897(已满)  三群：824575535
   6           *
   7           * 以下所有内容版权均属逐飞科技所有，未经允许不得用于商业用途，
   8           * 欢迎各位使用并传播本程序，修改内容时必须保留逐飞科技的版权声明。
   9           *
  10           * @file          gpio
  11           * @company       成都逐飞科技有限公司
  12           * @author        逐飞科技(QQ790875685)
  13           * @version       查看doc内version文件 版本说明
  14           * @Software    MDK FOR C51 V9.60
  15           * @Target core   STC8H8K64S4
  16           * @Taobao      https://seekfree.taobao.com/
  17           * @date          2020-4-14
  18           *********************************************************************************************************
             -***********/
  19          
  20          
  21          #include "zf_gpio.h"
  22          
  23          
  24          #define PxPU_BASE_ADDR  0xFE10 
  25          
  26          //--------------------------------------------------------------------------------------------------------
             ------------
  27          //  @brief      GPIO设置引脚上拉电阻设置
  28          //  @param      pin         选择引脚（P0_0-P7_7）
  29          //  @param      pull        设置上下拉电阻 NOPULL:不设置 PULLUP:上拉
  30          //  @return     void
  31          //  Sample usage:           gpio_pull_set(P0_0,NOPULL);       // 设置P0.0引脚没有上下拉电阻
  32          //--------------------------------------------------------------------------------------------------------
             ------------
  33          void gpio_pull_set(PIN_enum pin, PULL_enum pull)
  34          {
  35   1        if(PULLUP == pull)
  36   1        {
  37   2          (*(unsigned char volatile xdata *)(PxPU_BASE_ADDR + (pin >> 4))) |= (1<<(pin&0x0F));
  38   2        }
  39   1        else if(NOPULL == pull)
  40   1        {
  41   2          (*(unsigned char volatile xdata *)(PxPU_BASE_ADDR + (pin >> 4))) &= ~(1<<(pin&0x0F));
  42   2        }
  43   1      }
  44          
  45          
  46          
  47          //--------------------------------------------------------------------------------------------------------
C51 COMPILER V9.57.0.0   ZF_GPIO                                                           04/28/2021 20:58:25 PAGE 2   

             ------------
  48          //  @brief      GPIO设置引脚模式
  49          //  @param      pin         选择引脚（P0_0-P5_4）
  50          //  @param      mode        引脚模式 GPIO:准双向口, GPO_PP:推挽输出, GPI_IMPEDANCE:高阻输入, GPI_OD:开漏输
             -出
  51          //  @return     void
  52          //  Sample usage:           gpio_mode(P0_0,GPIO);       // 设置P0.0设置为双向IO
  53          //--------------------------------------------------------------------------------------------------------
             ------------
  54          void gpio_mode(PIN_enum pin, GPIOMODE_enum mode)
  55          {
  56   1        if(GPIO == mode)
  57   1        {
  58   2          if(0x00 == (pin&0xF0))  //P0
  59   2          {
  60   3            P0M1 &= ~(1<<(pin&0xF));
  61   3            P0M0 &= ~(1<<(pin&0xF));
  62   3          }
  63   2          if(0x10 == (pin&0xF0))  //P1
  64   2          {
  65   3            P1M1 &= ~(1<<(pin&0xF));
  66   3            P1M0 &= ~(1<<(pin&0xF));
  67   3          }
  68   2          if(0x20 == (pin&0xF0))  //P2
  69   2          {
  70   3            P2M1 &= ~(1<<(pin&0xF));
  71   3            P2M0 &= ~(1<<(pin&0xF));
  72   3          }
  73   2          
  74   2          if(0x30 == (pin&0xF0))  //P3
  75   2          {
  76   3            P3M1 &= ~(1<<(pin&0xF));
  77   3            P3M0 &= ~(1<<(pin&0xF));
  78   3          }
  79   2          if(0x40 == (pin&0xF0))  //P4
  80   2          {
  81   3            P4M1 &= ~(1<<(pin&0xF));
  82   3            P4M0 &= ~(1<<(pin&0xF));
  83   3          }
  84   2          if(0x50 == (pin&0xF0))  //P5
  85   2          {
  86   3            P5M1 &= ~(1<<(pin&0xF));
  87   3            P5M0 &= ~(1<<(pin&0xF));
  88   3          }
  89   2        }
  90   1        else if(GPO_PP == mode)
  91   1        {
  92   2          if(0x00 == (pin&0xF0))  //P0
  93   2          {
  94   3            P0M1 &= ~(1<<(pin&0xF));
  95   3            P0M0 |=  (1<<(pin&0xF));
  96   3          }
  97   2          if(0x10 == (pin&0xF0))  //P1
  98   2          {
  99   3            P1M1 &= ~(1<<(pin&0xF));
 100   3            P1M0 |=  (1<<(pin&0xF));
 101   3          }
 102   2          if(0x20 == (pin&0xF0))  //P2
 103   2          {
 104   3            P2M1 &= ~(1<<(pin&0xF));
 105   3            P2M0 |=  (1<<(pin&0xF));
 106   3          }
C51 COMPILER V9.57.0.0   ZF_GPIO                                                           04/28/2021 20:58:25 PAGE 3   

 107   2          
 108   2          if(0x30 == (pin&0xF0))  //P3
 109   2          {
 110   3            P3M1 &= ~(1<<(pin&0xF));
 111   3            P3M0 |=  (1<<(pin&0xF));
 112   3          }
 113   2          if(0x40 == (pin&0xF0))  //P4
 114   2          {
 115   3            P4M1 &= ~(1<<(pin&0xF));
 116   3            P4M0 |=  (1<<(pin&0xF));
 117   3          }
 118   2          if(0x50 == (pin&0xF0))  //P5
 119   2          {
 120   3            P5M1 &= ~(1<<(pin&0xF));
 121   3            P5M0 |=  (1<<(pin&0xF));
 122   3          }
 123   2        }
 124   1        else if(GPI_IMPEDANCE == mode)
 125   1        {
 126   2          if(0x00 == (pin&0xF0))  //P0
 127   2          {
 128   3            P0M1 |=  (1<<(pin&0xF));
 129   3            P0M0 &= ~(1<<(pin&0xF));
 130   3          }
 131   2          if(0x10 == (pin&0xF0))  //P1
 132   2          {
 133   3            P1M1 |=  (1<<(pin&0xF));
 134   3            P1M0 &= ~(1<<(pin&0xF));
 135   3          }
 136   2          if(0x20 == (pin&0xF0))  //P2
 137   2          {
 138   3            P2M1 |=  (1<<(pin&0xF));
 139   3            P2M0 &= ~(1<<(pin&0xF));
 140   3          }
 141   2          
 142   2          if(0x30 == (pin&0xF0))  //P3
 143   2          {
 144   3            P3M1 |=  (1<<(pin&0xF));
 145   3            P3M0 &= ~(1<<(pin&0xF));
 146   3          }
 147   2          if(0x40 == (pin&0xF0))  //P4
 148   2          {
 149   3            P4M1 |=  (1<<(pin&0xF));
 150   3            P4M0 &= ~(1<<(pin&0xF));
 151   3          }
 152   2          if(0x50 == (pin&0xF0))  //P5
 153   2          {
 154   3            P5M1 |=  (1<<(pin&0xF));
 155   3            P5M0 &= ~(1<<(pin&0xF));
 156   3          }
 157   2        }
 158   1        else if(GPI_OD == mode)
 159   1        {
 160   2          if(0x00 == (pin&0xF0))  //P0
 161   2          {
 162   3            P0M1 |= (1<<(pin&0xF));
 163   3            P0M0 |= (1<<(pin&0xF));
 164   3          }
 165   2          if(0x10 == (pin&0xF0))  //P1
 166   2          {
 167   3            P1M1 |= (1<<(pin&0xF));
 168   3            P1M0 |= (1<<(pin&0xF));
C51 COMPILER V9.57.0.0   ZF_GPIO                                                           04/28/2021 20:58:25 PAGE 4   

 169   3          }
 170   2          if(0x20 == (pin&0xF0))  //P2
 171   2          {
 172   3            P2M1 |= (1<<(pin&0xF));
 173   3            P2M0 |= (1<<(pin&0xF));
 174   3          }
 175   2          
 176   2          if(0x30 == (pin&0xF0))  //P3
 177   2          {
 178   3            P3M1 |= (1<<(pin&0xF));
 179   3            P3M0 |= (1<<(pin&0xF));
 180   3          }
 181   2          if(0x40 == (pin&0xF0))  //P4
 182   2          {
 183   3            P4M1 |= (1<<(pin&0xF));
 184   3            P4M0 |= (1<<(pin&0xF));
 185   3          }
 186   2          if(0x50 == (pin&0xF0))  //P5
 187   2          {
 188   3            P5M1 |= (1<<(pin&0xF));
 189   3            P5M0 |= (1<<(pin&0xF));
 190   3          }
 191   2        }
 192   1      }
 193          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    772    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)

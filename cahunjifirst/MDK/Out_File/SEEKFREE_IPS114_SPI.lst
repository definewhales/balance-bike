C51 COMPILER V9.57.0.0   SEEKFREE_IPS114_SPI                                               04/28/2021 20:58:26 PAGE 1   


C51 COMPILER V9.57.0.0, COMPILATION OF MODULE SEEKFREE_IPS114_SPI
OBJECT MODULE PLACED IN .\Out_File\SEEKFREE_IPS114_SPI.obj
COMPILER INVOKED BY: E:\keil5\anzhuang\C51\BIN\C51.EXE ..\..\Libraries\seekfree_peripheral\SEEKFREE_IPS114_SPI.c LARGE O
                    -MF2 OPTIMIZE(8,SPEED) BROWSE INCDIR(..\..\Libraries\libraries;..\..\Libraries\seekfree_libraries;..\..\Libraries\seekfre
                    -e_peripheral;..\USER\inc;..\USER\src;..\CODE;.\HARDWORE\Data;.\HARDWORE\DianGan;.\HARDWORE\FusionAngle;.\HARDWORE\BianMa
                    -Qi;.\HARDWORE\ShangWeiJi;.\HARDWORE;.\HARDWORE\Balance;.\KaErMan) DEBUG PRINT(.\Out_File\SEEKFREE_IPS114_SPI.lst) TABS(2
                    -) OBJECT(.\Out_File\SEEKFREE_IPS114_SPI.obj)

line level    source

   1          /*********************************************************************************************************
             -************
   2           * COPYRIGHT NOTICE
   3           * Copyright (c) 2018,逐飞科技
   4           * All rights reserved.
   5           * 技术讨论QQ群：一群：179029047(已满)  二群：244861897(已满)  三群：824575535
   6           *
   7           * 以下所有内容版权均属逐飞科技所有，未经允许不得用于商业用途，
   8           * 欢迎各位使用并传播本程序，修改内容时必须保留逐飞科技的版权声明。
   9           *
  10           * @file          main
  11           * @company       成都逐飞科技有限公司
  12           * @author        逐飞科技(QQ3184284598)
  13           * @version       查看doc内version文件 版本说明
  14           * @Software    MDK FOR C51 V9.60
  15           * @Taobao      https://seekfree.taobao.com/
  16           * @date          2019-11-15
  17           * @note    
  18                    接线定义：
  19                    ------------------------------------ 
  20                    1.14寸IPS模块管脚       单片机管脚
  21                    SCL                   查看SEEKFREE_IPS114_SPI.h文件内的IPS114_SCL   宏定义     硬件SPI引脚不可随意切换
  22                    SDA                   查看SEEKFREE_IPS114_SPI.h文件内的IPS114_SDA   宏定义     硬件SPI引脚不可随意切换
  23                    RES                   查看SEEKFREE_IPS114_SPI.h文件内的IPS114_REST_PIN宏定义    
  24                    DC                    查看SEEKFREE_IPS114_SPI.h文件内的IPS114_DC_PIN  宏定义  
  25                    CS                    查看SEEKFREE_IPS114_SPI.h文件内的IPS114_CS    宏定义     硬件SPI引脚不可随意切换
  26                    BL            查看SEEKFREE_IPS114_SPI.h文件内的IPS114_BL_PIN  宏定义
  27                    
  28                    电源引脚
  29                    VCC 3.3V电源
  30                    GND 电源地
  31                    最大分辨率135*240
  32                    ------------------------------------ 
  33           *********************************************************************************************************
             -***********/
  34           
  35          
  36          
  37          
  38          #include "SEEKFREE_IPS114_SPI.h"
  39          #include "SEEKFREE_FONT.h"
  40          #include "SEEKFREE_PRINTF.h"
  41          #include "zf_spi.h"
  42          #include "zf_delay.h"
  43          
  44          
  45          
  46          
  47          //--------------------------------------------------------------------------------------------------------
             ------------
  48          //  以下函数是使用软件SPI通信，相比较硬件SPI，软件SPI引脚更加灵活，可以使用任意普通IO
C51 COMPILER V9.57.0.0   SEEKFREE_IPS114_SPI                                               04/28/2021 20:58:26 PAGE 2   

  49          //--------------------------------------------------------------------------------------------------------
             ------------
  50          
  51          
  52          
  53          //--------------------------------------------------------------------------------------------------------
             ------------
  54          //  @brief      内部调用，用户无需关心
  55          //  @param      void        
  56          //  @return             
  57          //  @since      v1.0
  58          //  Sample usage:               
  59          //--------------------------------------------------------------------------------------------------------
             ------------
  60          void ips114_writeIndex_simspi(uint8 dat)      //写命令
  61          { 
  62   1        uint8 i = 8;
  63   1        IPS114_CS_SIMSPI(0);
  64   1          IPS114_DC_SIMSPI(0);
  65   1      
  66   1        IPS114_SCL_SIMSPI(0);
  67   1      
  68   1        while(i--)
  69   1        {
  70   2          if(dat&0x80){IPS114_SDA_SIMSPI(1);}
  71   2          else{IPS114_SDA_SIMSPI(0);}
  72   2          IPS114_SCL_SIMSPI(1);
  73   2      
  74   2          IPS114_SCL_SIMSPI(0);
  75   2          dat<<=1;
  76   2        } 
  77   1        IPS114_CS_SIMSPI(1);
  78   1      }
  79          
  80          //--------------------------------------------------------------------------------------------------------
             ------------
  81          //  @brief      内部调用，用户无需关心
  82          //  @param      void        
  83          //  @return             
  84          //  @since      v1.0
  85          //  Sample usage:               
  86          //--------------------------------------------------------------------------------------------------------
             ------------
  87          void ips114_writeData_simspi(uint8 dat)     //写数据
  88          {
  89   1        uint8 i = 8;
  90   1        IPS114_CS_SIMSPI(0);
  91   1          IPS114_DC_SIMSPI(1);
  92   1      
  93   1        IPS114_SCL_SIMSPI(0);
  94   1      
  95   1        while(i--)
  96   1        {
  97   2          if(dat&0x80){IPS114_SDA_SIMSPI(1);}
  98   2          else{IPS114_SDA_SIMSPI(0);}
  99   2          IPS114_SCL_SIMSPI(1);
 100   2      
 101   2          IPS114_SCL_SIMSPI(0);
 102   2          dat<<=1;
 103   2        } 
 104   1        IPS114_CS_SIMSPI(1);
 105   1      }
C51 COMPILER V9.57.0.0   SEEKFREE_IPS114_SPI                                               04/28/2021 20:58:26 PAGE 3   

 106          
 107          //--------------------------------------------------------------------------------------------------------
             ------------
 108          //  @brief      内部调用，用户无需关心
 109          //  @param      void        
 110          //  @return             
 111          //  @since      v1.0
 112          //  Sample usage:               
 113          //--------------------------------------------------------------------------------------------------------
             ------------
 114          void ips114_writeDatai_16bit_simspi(uint16 dat) //向液晶屏写一个16位数据
 115          {
 116   1          uint8 i=16;
 117   1        IPS114_CS_SIMSPI(0);
 118   1          IPS114_DC_SIMSPI(1);
 119   1          IPS114_SCL_SIMSPI(0);
 120   1        while(i--)
 121   1        {
 122   2            if(dat&0x8000){IPS114_SDA_SIMSPI(1);}
 123   2            else{IPS114_SDA_SIMSPI(0);}
 124   2            IPS114_SCL_SIMSPI(1);
 125   2          
 126   2            IPS114_SCL_SIMSPI(0);
 127   2            dat<<=1;
 128   2        }
 129   1        IPS114_CS_SIMSPI(1);
 130   1      }
 131          
 132          //--------------------------------------------------------------------------------------------------------
             ------------
 133          //  @brief      1.14寸 IPS液晶初始化
 134          //  @return     void
 135          //  @since      v1.0
 136          //  Sample usage:               
 137          //--------------------------------------------------------------------------------------------------------
             ------------
 138          void ips114_init_simspi(void)
 139          {
 140   1          
 141   1        IPS114_BL_SIMSPI(1);
 142   1        IPS114_DC_SIMSPI(0);
 143   1        IPS114_REST_SIMSPI(0);
 144   1        
 145   1          delay_ms(200);
 146   1          
 147   1          IPS114_REST_SIMSPI(1);
 148   1          delay_ms(100);
 149   1        
 150   1          ips114_writeIndex_simspi(0x36);
 151   1          
 152   1          if      (IPS114_DISPLAY_DIR==0)    ips114_writeData_simspi(0x00);
 153   1          else if (IPS114_DISPLAY_DIR==1)    ips114_writeData_simspi(0xC0);
 154   1          else if (IPS114_DISPLAY_DIR==2)    ips114_writeData_simspi(0x70);
 155   1          else                              ips114_writeData_simspi(0xA0);
 156   1          
 157   1          ips114_writeIndex_simspi(0x3A); 
 158   1          ips114_writeData_simspi(0x05);
 159   1      
 160   1          ips114_writeIndex_simspi(0xB2);
 161   1          ips114_writeData_simspi(0x0C);
 162   1          ips114_writeData_simspi(0x0C);
 163   1          ips114_writeData_simspi(0x00);
C51 COMPILER V9.57.0.0   SEEKFREE_IPS114_SPI                                               04/28/2021 20:58:26 PAGE 4   

 164   1          ips114_writeData_simspi(0x33);
 165   1          ips114_writeData_simspi(0x33); 
 166   1      
 167   1          ips114_writeIndex_simspi(0xB7); 
 168   1          ips114_writeData_simspi(0x35);  
 169   1      
 170   1          ips114_writeIndex_simspi(0xBB);
 171   1          ips114_writeData_simspi(0x37);
 172   1      
 173   1          ips114_writeIndex_simspi(0xC0);
 174   1          ips114_writeData_simspi(0x2C);
 175   1      
 176   1          ips114_writeIndex_simspi(0xC2);
 177   1          ips114_writeData_simspi(0x01);
 178   1      
 179   1          ips114_writeIndex_simspi(0xC3);
 180   1          ips114_writeData_simspi(0x12);   
 181   1      
 182   1          ips114_writeIndex_simspi(0xC4);
 183   1          ips114_writeData_simspi(0x20);  
 184   1      
 185   1          ips114_writeIndex_simspi(0xC6); 
 186   1          ips114_writeData_simspi(0x0F);    
 187   1      
 188   1          ips114_writeIndex_simspi(0xD0); 
 189   1          ips114_writeData_simspi(0xA4);
 190   1          ips114_writeData_simspi(0xA1);
 191   1      
 192   1          ips114_writeIndex_simspi(0xE0);
 193   1          ips114_writeData_simspi(0xD0);
 194   1          ips114_writeData_simspi(0x04);
 195   1          ips114_writeData_simspi(0x0D);
 196   1          ips114_writeData_simspi(0x11);
 197   1          ips114_writeData_simspi(0x13);
 198   1          ips114_writeData_simspi(0x2B);
 199   1          ips114_writeData_simspi(0x3F);
 200   1          ips114_writeData_simspi(0x54);
 201   1          ips114_writeData_simspi(0x4C);
 202   1          ips114_writeData_simspi(0x18);
 203   1          ips114_writeData_simspi(0x0D);
 204   1          ips114_writeData_simspi(0x0B);
 205   1          ips114_writeData_simspi(0x1F);
 206   1          ips114_writeData_simspi(0x23);
 207   1      
 208   1          ips114_writeIndex_simspi(0xE1);
 209   1          ips114_writeData_simspi(0xD0);
 210   1          ips114_writeData_simspi(0x04);
 211   1          ips114_writeData_simspi(0x0C);
 212   1          ips114_writeData_simspi(0x11);
 213   1          ips114_writeData_simspi(0x13);
 214   1          ips114_writeData_simspi(0x2C);
 215   1          ips114_writeData_simspi(0x3F);
 216   1          ips114_writeData_simspi(0x44);
 217   1          ips114_writeData_simspi(0x51);
 218   1          ips114_writeData_simspi(0x2F);
 219   1          ips114_writeData_simspi(0x1F);
 220   1          ips114_writeData_simspi(0x1F);
 221   1          ips114_writeData_simspi(0x20);
 222   1          ips114_writeData_simspi(0x23);
 223   1      
 224   1          ips114_writeIndex_simspi(0x21); 
 225   1      
C51 COMPILER V9.57.0.0   SEEKFREE_IPS114_SPI                                               04/28/2021 20:58:26 PAGE 5   

 226   1          ips114_writeIndex_simspi(0x11); 
 227   1          delay_ms(120); 
 228   1      
 229   1          ips114_writeIndex_simspi(0x29);
 230   1          ips114_clear_simspi(IPS114_BGCOLOR);
 231   1      }
 232          
 233          
 234          
 235          void ips114_set_region_simspi(uint16 x1,uint16 y1,uint16 x2,uint16 y2)
 236          {
 237   1        #if(IPS114_DISPLAY_DIR==0)
                {
                  ips114_writeIndex_simspi(0x2a);//列地址设置
                  ips114_writeDatai_16bit_simspi(x1+52);
                  ips114_writeDatai_16bit_simspi(x2+52);
                  ips114_writeIndex_simspi(0x2b);//行地址设置
                  ips114_writeDatai_16bit_simspi(y1+40);
                  ips114_writeDatai_16bit_simspi(y2+40);
                  ips114_writeIndex_simspi(0x2c);//储存器写
                }
                #elif(IPS114_DISPLAY_DIR==1)
                {
                  ips114_writeIndex_simspi(0x2a);//列地址设置
                  ips114_writeDatai_16bit_simspi(x1+53);
                  ips114_writeDatai_16bit_simspi(x2+53);
                  ips114_writeIndex_simspi(0x2b);//行地址设置
                  ips114_writeDatai_16bit_simspi(y1+40);
                  ips114_writeDatai_16bit_simspi(y2+40);
                  ips114_writeIndex_simspi(0x2c);//储存器写
                }
                #elif(IPS114_DISPLAY_DIR==2)
                {
                  ips114_writeIndex_simspi(0x2a);//列地址设置
                  ips114_writeDatai_16bit_simspi(x1+40);
                  ips114_writeDatai_16bit_simspi(x2+40);
                  ips114_writeIndex_simspi(0x2b);//行地址设置
                  ips114_writeDatai_16bit_simspi(y1+53);
                  ips114_writeDatai_16bit_simspi(y2+53);
                  ips114_writeIndex_simspi(0x2c);//储存器写
                }
                #else
 268   1        {
 269   2          ips114_writeIndex_simspi(0x2a);//列地址设置
 270   2          ips114_writeDatai_16bit_simspi(x1+40);
 271   2          ips114_writeDatai_16bit_simspi(x2+40);
 272   2          ips114_writeIndex_simspi(0x2b);//行地址设置
 273   2          ips114_writeDatai_16bit_simspi(y1+52);
 274   2          ips114_writeDatai_16bit_simspi(y2+52);
 275   2          ips114_writeIndex_simspi(0x2c);//储存器写
 276   2        }
 277   1        #endif
 278   1      }
 279          
 280          //--------------------------------------------------------------------------------------------------------
             ------------
 281          //  @brief      液晶清屏函数
 282          //  @param      color         颜色设置
 283          //  @return     void
 284          //  @since      v1.0
 285          //  Sample usage:               ips114_clear(YELLOW);// 全屏设置为黄色
 286          //--------------------------------------------------------------------------------------------------------
C51 COMPILER V9.57.0.0   SEEKFREE_IPS114_SPI                                               04/28/2021 20:58:26 PAGE 6   

             ------------
 287          void ips114_clear_simspi(uint16 color)
 288          {
 289   1          uint16 i,j;
 290   1        ips114_set_region_simspi(0,0,IPS114_X_MAX-1,IPS114_Y_MAX-1);
 291   1          for(i=0;i<IPS114_X_MAX;i++)
 292   1          {
 293   2              for (j=0;j<IPS114_Y_MAX;j++)
 294   2            {
 295   3                ips114_writeDatai_16bit_simspi(color);         
 296   3            }
 297   2          }
 298   1      }
 299          
 300          //--------------------------------------------------------------------------------------------------------
             ------------
 301          //  @brief      液晶画点
 302          //  @param      x               坐标x方向的起点
 303          //  @param      y               坐标y方向的起点
 304          //  @param      dat             需要显示的颜色
 305          //  @return     void
 306          //  @since      v1.0
 307          //  Sample usage:               ips114_drawpoint(0,0,RED);  //坐标0,0画一个红色的点
 308          //--------------------------------------------------------------------------------------------------------
             ------------
 309          void ips114_drawpoint_simspi(uint16 x,uint16 y,uint16 color)
 310          {
 311   1          ips114_set_region_simspi(x,y,x,y);
 312   1          ips114_writeDatai_16bit_simspi(color);
 313   1      }
 314          
 315          
 316          
 317          //--------------------------------------------------------------------------------------------------------
             ------------
 318          //  @brief      液晶显示字符
 319          //  @param      x               坐标x方向的起点 参数范围 0 -（IPS114_X_MAX-1）
 320          //  @param      y               坐标y方向的起点 参数范围 0 -（IPS114_Y_MAX/16-1）
 321          //  @param      dat             需要显示的字符
 322          //  @return     void
 323          //  @since      v1.0
 324          //  Sample usage:               ips114_showchar(0,0,'x');//坐标0,0写一个字符x
 325          //--------------------------------------------------------------------------------------------------------
             ------------
 326          void ips114_showchar_simspi(uint16 x,uint16 y,const int8 dat)
 327          {
 328   1        uint8 i,j;
 329   1        uint8 temp;
 330   1          
 331   1        for(i=0; i<16; i++)
 332   1        {
 333   2          ips114_set_region_simspi(x,y+i,x+7,y+i);
 334   2          temp = tft_ascii[dat-32][i];//减32因为是取模是从空格开始取得 空格在ascii中序号是32
 335   2          for(j=0; j<8; j++)
 336   2          {
 337   3            if(temp&0x01) 
 338   3                  {
 339   4                      ips114_writeDatai_16bit_simspi(IPS114_PENCOLOR);
 340   4                  }
 341   3            else      ips114_writeDatai_16bit_simspi(IPS114_BGCOLOR);
 342   3            temp>>=1;
 343   3          }
C51 COMPILER V9.57.0.0   SEEKFREE_IPS114_SPI                                               04/28/2021 20:58:26 PAGE 7   

 344   2        }
 345   1      }
 346          
 347          //--------------------------------------------------------------------------------------------------------
             ------------
 348          //  @brief      液晶显示字符串
 349          //  @param      x               坐标x方向的起点  参数范围 0 -（IPS114_X_MAX-1）
 350          //  @param      y               坐标y方向的起点  参数范围 0 -（IPS114_Y_MAX/16-1）
 351          //  @param      dat             需要显示的字符串
 352          //  @return     void
 353          //  @since      v1.0
 354          //  Sample usage:               ips114_showstr(0,0,"seekfree");
 355          //--------------------------------------------------------------------------------------------------------
             ------------
 356          void ips114_showstr_simspi(uint16 x,uint16 y,const int8 dat[])
 357          {
 358   1        uint16 j;
 359   1        
 360   1        j = 0;
 361   1        while(dat[j] != '\0')
 362   1        {
 363   2          ips114_showchar_simspi(x+8*j,y*16,dat[j]);
 364   2          j++;
 365   2        }
 366   1      }
 367          
 368          //--------------------------------------------------------------------------------------------------------
             ------------
 369          //  @brief      液晶显示8位有符号
 370          //  @param      x               坐标x方向的起点  参数范围 0 -（IPS114_X_MAX-1）
 371          //  @param      y               坐标y方向的起点  参数范围 0 -（IPS114_Y_MAX/16-1）
 372          //  @param      dat             需要显示的变量，数据类型int8
 373          //  @return     void
 374          //  @since      v1.0
 375          //  Sample usage:               ips114_showint8(0,0,x);//x为int8类型
 376          //--------------------------------------------------------------------------------------------------------
             ------------
 377          void ips114_showint8_simspi(uint16 x,uint16 y,int8 dat)
 378          {
 379   1        uint8 a[3];
 380   1        uint8 i;
 381   1        if(dat<0)
 382   1        {
 383   2          ips114_showchar_simspi(x,y*16,'-');
 384   2          dat = -dat;
 385   2        }
 386   1        else  ips114_showchar_simspi(x,y*16,' ');
 387   1        
 388   1        a[0] = dat/100;
 389   1        a[1] = dat/10%10;
 390   1        a[2] = dat%10;
 391   1        i = 0;
 392   1        while(i<3)
 393   1        {
 394   2          ips114_showchar_simspi(x+(8*(i+1)),y*16,'0' + a[i]);
 395   2          i++;
 396   2        }
 397   1      }
 398          
 399          //--------------------------------------------------------------------------------------------------------
             ------------
 400          //  @brief      液晶显示8位无符号
C51 COMPILER V9.57.0.0   SEEKFREE_IPS114_SPI                                               04/28/2021 20:58:26 PAGE 8   

 401          //  @param      x               坐标x方向的起点 参数范围 0 -（IPS114_X_MAX-1）
 402          //  @param      y               坐标y方向的起点 参数范围 0 -（IPS114_Y_MAX/16-1）
 403          //  @param      dat             需要显示的变量，数据类型uint8
 404          //  @return     void
 405          //  @since      v1.0
 406          //  Sample usage:               ips114_showuint8(0,0,x);//x为uint8类型
 407          //--------------------------------------------------------------------------------------------------------
             ------------
 408          void ips114_showuint8_simspi(uint16 x,uint16 y,uint8 dat)
 409          {
 410   1        uint8 a[3];
 411   1        uint8 i;
 412   1        
 413   1        a[0] = dat/100;
 414   1        a[1] = dat/10%10;
 415   1        a[2] = dat%10;
 416   1        i = 0;
 417   1        while(i<3)
 418   1        {
 419   2          ips114_showchar_simspi(x+(8*i),y*16,'0' + a[i]);
 420   2          i++;
 421   2        }
 422   1        
 423   1      }
 424          
 425          //--------------------------------------------------------------------------------------------------------
             ------------
 426          //  @brief      液晶显示16位有符号
 427          //  @param      x               坐标x方向的起点 参数范围 0 -（IPS114_X_MAX-1）
 428          //  @param      y               坐标y方向的起点 参数范围 0 -（IPS114_Y_MAX/16-1）
 429          //  @param      dat             需要显示的变量，数据类型int16
 430          //  @return     void
 431          //  @since      v1.0
 432          //  Sample usage:               ips114_showint16(0,0,x);//x为int16类型
 433          //--------------------------------------------------------------------------------------------------------
             ------------
 434          void ips114_showint16_simspi(uint16 x,uint16 y,int16 dat)
 435          {
 436   1        uint8 a[5];
 437   1        uint8 i;
 438   1        if(dat<0)
 439   1        {
 440   2          ips114_showchar_simspi(x,y*16,'-');
 441   2          dat = -dat;
 442   2        }
 443   1        else  ips114_showchar_simspi(x,y*16,' ');
 444   1      
 445   1        a[0] = dat/10000;
 446   1        a[1] = dat/1000%10;
 447   1        a[2] = dat/100%10;
 448   1        a[3] = dat/10%10;
 449   1        a[4] = dat%10;
 450   1        
 451   1        i = 0;
 452   1        while(i<5)
 453   1        {
 454   2          ips114_showchar_simspi(x+(8*(i+1)),y*16,'0' + a[i]);
 455   2          i++;
 456   2        }
 457   1      }
 458          
 459          //--------------------------------------------------------------------------------------------------------
C51 COMPILER V9.57.0.0   SEEKFREE_IPS114_SPI                                               04/28/2021 20:58:26 PAGE 9   

             ------------
 460          //  @brief      液晶显示16位无符号
 461          //  @param      x               坐标x方向的起点 参数范围 0 -（IPS114_X_MAX-1）
 462          //  @param      y               坐标y方向的起点 参数范围 0 -（IPS114_Y_MAX/16-1）
 463          //  @param      dat             需要显示的变量，数据类型uint16
 464          //  @return     void
 465          //  @since      v1.0
 466          //  Sample usage:               ips114_showuint16(0,0,x);//x为uint16类型
 467          //--------------------------------------------------------------------------------------------------------
             ------------
 468          void ips114_showuint16_simspi(uint16 x,uint16 y,uint16 dat)
 469          {
 470   1        uint8 a[5];
 471   1        uint8 i;
 472   1      
 473   1        a[0] = dat/10000;
 474   1        a[1] = dat/1000%10;
 475   1        a[2] = dat/100%10;
 476   1        a[3] = dat/10%10;
 477   1        a[4] = dat%10;
 478   1        
 479   1        i = 0;
 480   1        while(i<5)
 481   1        {
 482   2          ips114_showchar_simspi(x+(8*i),y*16,'0' + a[i]);
 483   2          i++;
 484   2        }
 485   1      }
 486          
 487          //--------------------------------------------------------------------------------------------------------
             ------------
 488          //  @brief      液晶显示32位有符号(去除整数部分无效的0)
 489          //  @param      x               坐标x方向的起点 参数范围 0 -（IPS114_X_MAX-1）
 490          //  @param      y               坐标y方向的起点 参数范围 0 -（IPS114_Y_MAX/16-1）
 491          //  @param      dat             需要显示的变量，数据类型uint32
 492          //  @param      num             需要显示的位数 最高10位  不包含正负号
 493          //  @return     void
 494          //  @since      v1.0
 495          //  Sample usage:               ips114_showuint32(0,0,x,3);//x可以为int32 uint16 int16 uint8 int8类型
 496          //  Sample usage:               负数会显示一个 ‘-’号   正数显示一个空格
 497          //--------------------------------------------------------------------------------------------------------
             ------------
 498          void ips114_showint32_simspi(uint16 x,uint16 y,int32 dat,uint8 num)
 499          {
 500   1          int8    buff[34];
 501   1          uint8   length;
 502   1          
 503   1          if(10<num)      num = 10;
 504   1          
 505   1          num++;
 506   1          if(0>dat)   length = zf_sprintf( &buff[0],"%d",dat);//负数
 507   1          else
 508   1          {
 509   2              buff[0] = ' ';
 510   2              length = zf_sprintf( &buff[1],"%d",dat);
 511   2              length++;
 512   2          }
 513   1          while(length < num)
 514   1          {
 515   2              buff[length] = ' ';
 516   2              length++;
 517   2          }
C51 COMPILER V9.57.0.0   SEEKFREE_IPS114_SPI                                               04/28/2021 20:58:26 PAGE 10  

 518   1          buff[num] = '\0';
 519   1      
 520   1          ips114_showstr_simspi(x, y, buff);  //显示数字
 521   1      }
 522          
 523          
 524          //--------------------------------------------------------------------------------------------------------
             ------------
 525          //  @brief      液晶显示浮点数(去除整数部分无效的0)
 526          //  @param      x               坐标x方向的起点 参数范围 0 -（IPS114_X_MAX-1）
 527          //  @param      y               坐标y方向的起点 参数范围 0 -（IPS114_Y_MAX/16-1）
 528          //  @param      dat             需要显示的变量，数据类型float或double
 529          //  @param      num             整数位显示长度   最高10位  
 530          //  @param      pointnum        小数位显示长度   最高6位
 531          //  @return     void
 532          //  @since      v1.0
 533          //  Sample usage:               ips114_showfloat(0,0,x,2,3);//显示浮点数   整数显示2位   小数显示三位
 534          //  @note                       特别注意当发现小数部分显示的值与你写入的值不一样的时候，
 535          //                              可能是由于浮点数精度丢失问题导致的，这并不是显示函数的问题，
 536          //                              有关问题的详情，请自行百度学习   浮点数精度丢失问题。
 537          //                              负数会显示一个 ‘-’号   正数显示一个空格
 538          //--------------------------------------------------------------------------------------------------------
             ------------
 539          void ips114_showfloat_simspi(uint16 x,uint16 y,double dat,uint8 num,uint8 pointnum)
 540          {
 541   1          uint8   length;
 542   1        int8    buff[34];
 543   1        int8    start,end,point;
 544   1      
 545   1        if(6<pointnum)  pointnum = 6;
 546   1          if(10<num)      num = 10;
 547   1              
 548   1          if(0>dat)   length = zf_sprintf( &buff[0],"%f",dat);//负数
 549   1          else
 550   1          {
 551   2              length = zf_sprintf( &buff[1],"%f",dat);
 552   2              length++;
 553   2          }
 554   1          point = length - 7;         //计算小数点位置
 555   1          start = point - num - 1;    //计算起始位
 556   1          end = point + pointnum + 1; //计算结束位
 557   1          while(0>start)//整数位不够  末尾应该填充空格
 558   1          {
 559   2              buff[end] = ' ';
 560   2              end++;
 561   2              start++;
 562   2          }
 563   1          
 564   1          if(0>dat)   buff[start] = '-';
 565   1          else        buff[start] = ' ';
 566   1          
 567   1          buff[end] = '\0';
 568   1      
 569   1          ips114_showstr_simspi(x, y, buff);  //显示数字
 570   1      }
 571          
 572          
 573          
 574          
 575          //--------------------------------------------------------------------------------------------------------
             ------------
 576          //  以下函数是使用硬件SPI通信，相比较软件IIC，速度比软件IIC快。
C51 COMPILER V9.57.0.0   SEEKFREE_IPS114_SPI                                               04/28/2021 20:58:26 PAGE 11  

 577          //--------------------------------------------------------------------------------------------------------
             ------------
 578          
 579          
 580          
 581          
 582          //--------------------------------------------------------------------------------------------------------
             ------------
 583          //  @brief      内部调用，用户无需关心
 584          //  @param      void        
 585          //  @return             
 586          //  @since      v1.0
 587          //  Sample usage:               
 588          //--------------------------------------------------------------------------------------------------------
             ------------
 589          void ips114_writeIndex(uint8 dat)     //写命令
 590          { 
 591   1        IPS114_CS(0);
 592   1          IPS114_DC(0);
 593   1      
 594   1        spi_mosi(dat);
 595   1        IPS114_CS(1);
 596   1      }
 597          
 598          //--------------------------------------------------------------------------------------------------------
             ------------
 599          //  @brief      内部调用，用户无需关心
 600          //  @param      void        
 601          //  @return             
 602          //  @since      v1.0
 603          //  Sample usage:               
 604          //--------------------------------------------------------------------------------------------------------
             ------------
 605          void ips114_writeData(uint8 dat)      //写数据
 606          {
 607   1        IPS114_CS(0);
 608   1          IPS114_DC(1);
 609   1      
 610   1        spi_mosi(dat);
 611   1        IPS114_CS(1);
 612   1      }
 613          
 614          //--------------------------------------------------------------------------------------------------------
             ------------
 615          //  @brief      内部调用，用户无需关心
 616          //  @param      void        
 617          //  @return             
 618          //  @since      v1.0
 619          //  Sample usage:               
 620          //--------------------------------------------------------------------------------------------------------
             ------------
 621          void ips114_writedata_16bit(uint16 dat) //向液晶屏写一个16位数据
 622          {
 623   1          uint8 dat1[2];
 624   1          dat1[0] = dat >> 8;
 625   1          dat1[1] = (uint8)dat;
 626   1        IPS114_CS(0);
 627   1          IPS114_DC(1);
 628   1        spi_mosi(dat1[0]);  //写入数据  高位在前  低位在后
 629   1        spi_mosi(dat1[1]);
 630   1        IPS114_CS(1);
 631   1      }
C51 COMPILER V9.57.0.0   SEEKFREE_IPS114_SPI                                               04/28/2021 20:58:26 PAGE 12  

 632          
 633          //--------------------------------------------------------------------------------------------------------
             ------------
 634          //  @brief      1.14寸 IPS液晶初始化
 635          //  @return     void
 636          //  @since      v1.0
 637          //  Sample usage:               
 638          //--------------------------------------------------------------------------------------------------------
             ------------
 639          void ips114_init(void)
 640          {
 641   1          spi_init(IPS114_SPIN_PIN, IPS114_SCL_PIN, IPS114_SDA_PIN, IPS114_SDA_IN_PIN, 0, MASTER, SPI_SYSclk_DIV
             -_4);
 642   1      
 643   1        IPS114_BL(1);
 644   1        IPS114_DC(0);
 645   1        IPS114_REST(0);
 646   1        
 647   1          delay_ms(200);
 648   1          
 649   1          IPS114_REST(1);
 650   1          delay_ms(100);
 651   1        
 652   1          ips114_writeIndex(0x36);
 653   1          
 654   1          if      (IPS114_DISPLAY_DIR==0)    ips114_writeData(0x00);
 655   1          else if (IPS114_DISPLAY_DIR==1)    ips114_writeData(0xC0);
 656   1          else if (IPS114_DISPLAY_DIR==2)    ips114_writeData(0x70);
 657   1          else                            ips114_writeData(0xA0);
 658   1          
 659   1          ips114_writeIndex(0x3A); 
 660   1          ips114_writeData(0x05);
 661   1      
 662   1          ips114_writeIndex(0xB2);
 663   1          ips114_writeData(0x0C);
 664   1          ips114_writeData(0x0C);
 665   1          ips114_writeData(0x00);
 666   1          ips114_writeData(0x33);
 667   1          ips114_writeData(0x33); 
 668   1      
 669   1          ips114_writeIndex(0xB7); 
 670   1          ips114_writeData(0x35);  
 671   1      
 672   1          ips114_writeIndex(0xBB);
 673   1          ips114_writeData(0x37);
 674   1      
 675   1          ips114_writeIndex(0xC0);
 676   1          ips114_writeData(0x2C);
 677   1      
 678   1          ips114_writeIndex(0xC2);
 679   1          ips114_writeData(0x01);
 680   1      
 681   1          ips114_writeIndex(0xC3);
 682   1          ips114_writeData(0x12);   
 683   1      
 684   1          ips114_writeIndex(0xC4);
 685   1          ips114_writeData(0x20);  
 686   1      
 687   1          ips114_writeIndex(0xC6); 
 688   1          ips114_writeData(0x0F);    
 689   1      
 690   1          ips114_writeIndex(0xD0); 
C51 COMPILER V9.57.0.0   SEEKFREE_IPS114_SPI                                               04/28/2021 20:58:26 PAGE 13  

 691   1          ips114_writeData(0xA4);
 692   1          ips114_writeData(0xA1);
 693   1      
 694   1          ips114_writeIndex(0xE0);
 695   1          ips114_writeData(0xD0);
 696   1          ips114_writeData(0x04);
 697   1          ips114_writeData(0x0D);
 698   1          ips114_writeData(0x11);
 699   1          ips114_writeData(0x13);
 700   1          ips114_writeData(0x2B);
 701   1          ips114_writeData(0x3F);
 702   1          ips114_writeData(0x54);
 703   1          ips114_writeData(0x4C);
 704   1          ips114_writeData(0x18);
 705   1          ips114_writeData(0x0D);
 706   1          ips114_writeData(0x0B);
 707   1          ips114_writeData(0x1F);
 708   1          ips114_writeData(0x23);
 709   1      
 710   1          ips114_writeIndex(0xE1);
 711   1          ips114_writeData(0xD0);
 712   1          ips114_writeData(0x04);
 713   1          ips114_writeData(0x0C);
 714   1          ips114_writeData(0x11);
 715   1          ips114_writeData(0x13);
 716   1          ips114_writeData(0x2C);
 717   1          ips114_writeData(0x3F);
 718   1          ips114_writeData(0x44);
 719   1          ips114_writeData(0x51);
 720   1          ips114_writeData(0x2F);
 721   1          ips114_writeData(0x1F);
 722   1          ips114_writeData(0x1F);
 723   1          ips114_writeData(0x20);
 724   1          ips114_writeData(0x23);
 725   1      
 726   1          ips114_writeIndex(0x21); 
 727   1      
 728   1          ips114_writeIndex(0x11); 
 729   1          delay_ms(120); 
 730   1      
 731   1          ips114_writeIndex(0x29);
 732   1          ips114_clear(IPS114_BGCOLOR);
 733   1      }
 734          
 735          
 736          
 737          void ips114_set_region(uint16 x1,uint16 y1,uint16 x2,uint16 y2)
 738          {
 739   1        #if(IPS114_DISPLAY_DIR==0)
                {
                  ips114_writeIndex(0x2a);//列地址设置
                  ips114_writedata_16bit(x1+52);
                  ips114_writedata_16bit(x2+52);
                  ips114_writeIndex(0x2b);//行地址设置
                  ips114_writedata_16bit(y1+40);
                  ips114_writedata_16bit(y2+40);
                  ips114_writeIndex(0x2c);//储存器写
                }
                #elif(IPS114_DISPLAY_DIR==1)
                {
                  ips114_writeIndex(0x2a);//列地址设置
                  ips114_writedata_16bit(x1+53);
C51 COMPILER V9.57.0.0   SEEKFREE_IPS114_SPI                                               04/28/2021 20:58:26 PAGE 14  

                  ips114_writedata_16bit(x2+53);
                  ips114_writeIndex(0x2b);//行地址设置
                  ips114_writedata_16bit(y1+40);
                  ips114_writedata_16bit(y2+40);
                  ips114_writeIndex(0x2c);//储存器写
                }
                #elif(IPS114_DISPLAY_DIR==2)
                {
                  ips114_writeIndex(0x2a);//列地址设置
                  ips114_writedata_16bit(x1+40);
                  ips114_writedata_16bit(x2+40);
                  ips114_writeIndex(0x2b);//行地址设置
                  ips114_writedata_16bit(y1+53);
                  ips114_writedata_16bit(y2+53);
                  ips114_writeIndex(0x2c);//储存器写
                }
                #else
 770   1        {
 771   2          ips114_writeIndex(0x2a);//列地址设置
 772   2          ips114_writedata_16bit(x1+40);
 773   2          ips114_writedata_16bit(x2+40);
 774   2          ips114_writeIndex(0x2b);//行地址设置
 775   2          ips114_writedata_16bit(y1+52);
 776   2          ips114_writedata_16bit(y2+52);
 777   2          ips114_writeIndex(0x2c);//储存器写
 778   2        }
 779   1        #endif
 780   1      }
 781          
 782          //--------------------------------------------------------------------------------------------------------
             ------------
 783          //  @brief      液晶清屏函数
 784          //  @param      color         颜色设置
 785          //  @return     void
 786          //  @since      v1.0
 787          //  Sample usage:               ips114_clear(YELLOW);// 全屏设置为黄色
 788          //--------------------------------------------------------------------------------------------------------
             ------------
 789          void ips114_clear(uint16 color)
 790          {
 791   1          uint16 i,j;
 792   1        ips114_set_region(0,0,IPS114_X_MAX-1,IPS114_Y_MAX-1);
 793   1          for(i=0;i<IPS114_X_MAX;i++)
 794   1          {
 795   2              for (j=0;j<IPS114_Y_MAX;j++)
 796   2            {
 797   3                ips114_writedata_16bit(color);         
 798   3            }
 799   2          }
 800   1      }
 801          
 802          //--------------------------------------------------------------------------------------------------------
             ------------
 803          //  @brief      液晶画点
 804          //  @param      x               坐标x方向的起点
 805          //  @param      y               坐标y方向的起点
 806          //  @param      dat             需要显示的颜色
 807          //  @return     void
 808          //  @since      v1.0
 809          //  Sample usage:               ips114_drawpoint(0,0,RED);  //坐标0,0画一个红色的点
 810          //--------------------------------------------------------------------------------------------------------
             ------------
C51 COMPILER V9.57.0.0   SEEKFREE_IPS114_SPI                                               04/28/2021 20:58:26 PAGE 15  

 811          void ips114_drawpoint(uint16 x,uint16 y,uint16 color)
 812          {
 813   1          ips114_set_region(x,y,x,y);
 814   1          ips114_writedata_16bit(color);
 815   1      }
 816          
 817          
 818          
 819          //--------------------------------------------------------------------------------------------------------
             ------------
 820          //  @brief      液晶显示字符
 821          //  @param      x               坐标x方向的起点 参数范围 0 -（IPS114_X_MAX-1）
 822          //  @param      y               坐标y方向的起点 参数范围 0 -（IPS114_Y_MAX/16-1）
 823          //  @param      dat             需要显示的字符
 824          //  @return     void
 825          //  @since      v1.0
 826          //  Sample usage:               ips114_showchar(0,0,'x');//坐标0,0写一个字符x
 827          //--------------------------------------------------------------------------------------------------------
             ------------
 828          void ips114_showchar(uint16 x,uint16 y,const int8 dat)
 829          {
 830   1        uint8 i,j;
 831   1        uint8 temp;
 832   1          
 833   1        for(i=0; i<16; i++)
 834   1        {
 835   2          ips114_set_region(x,y+i,x+7,y+i);
 836   2          temp = tft_ascii[dat-32][i];//减32因为是取模是从空格开始取得 空格在ascii中序号是32
 837   2          for(j=0; j<8; j++)
 838   2          {
 839   3            if(temp&0x01) 
 840   3                  {
 841   4                      ips114_writedata_16bit(IPS114_PENCOLOR);
 842   4                  }
 843   3            else      ips114_writedata_16bit(IPS114_BGCOLOR);
 844   3            temp>>=1;
 845   3          }
 846   2        }
 847   1      }
 848          
 849          //--------------------------------------------------------------------------------------------------------
             ------------
 850          //  @brief      液晶显示字符串
 851          //  @param      x               坐标x方向的起点  参数范围 0 -（IPS114_X_MAX-1）
 852          //  @param      y               坐标y方向的起点  参数范围 0 -（IPS114_Y_MAX/16-1）
 853          //  @param      dat             需要显示的字符串
 854          //  @return     void
 855          //  @since      v1.0
 856          //  Sample usage:               ips114_showstr(0,0,"seekfree");
 857          //--------------------------------------------------------------------------------------------------------
             ------------
 858          void ips114_showstr(uint16 x,uint16 y,const int8 dat[])
 859          {
 860   1        uint16 j;
 861   1        
 862   1        j = 0;
 863   1        while(dat[j] != '\0')
 864   1        {
 865   2          ips114_showchar(x+8*j,y*16,dat[j]);
 866   2          j++;
 867   2        }
 868   1      }
C51 COMPILER V9.57.0.0   SEEKFREE_IPS114_SPI                                               04/28/2021 20:58:26 PAGE 16  

 869          
 870          //--------------------------------------------------------------------------------------------------------
             ------------
 871          //  @brief      液晶显示8位有符号
 872          //  @param      x               坐标x方向的起点  参数范围 0 -（IPS114_X_MAX-1）
 873          //  @param      y               坐标y方向的起点  参数范围 0 -（IPS114_Y_MAX/16-1）
 874          //  @param      dat             需要显示的变量，数据类型int8
 875          //  @return     void
 876          //  @since      v1.0
 877          //  Sample usage:               ips114_showint8(0,0,x);//x为int8类型
 878          //--------------------------------------------------------------------------------------------------------
             ------------
 879          void ips114_showint8(uint16 x,uint16 y,int8 dat)
 880          {
 881   1        uint8 a[3];
 882   1        uint8 i;
 883   1        if(dat<0)
 884   1        {
 885   2          ips114_showchar(x,y*16,'-');
 886   2          dat = -dat;
 887   2        }
 888   1        else  ips114_showchar(x,y*16,' ');
 889   1        
 890   1        a[0] = dat/100;
 891   1        a[1] = dat/10%10;
 892   1        a[2] = dat%10;
 893   1        i = 0;
 894   1        while(i<3)
 895   1        {
 896   2          ips114_showchar(x+(8*(i+1)),y*16,'0' + a[i]);
 897   2          i++;
 898   2        }
 899   1      }
 900          
 901          //--------------------------------------------------------------------------------------------------------
             ------------
 902          //  @brief      液晶显示8位无符号
 903          //  @param      x               坐标x方向的起点 参数范围 0 -（IPS114_X_MAX-1）
 904          //  @param      y               坐标y方向的起点 参数范围 0 -（IPS114_Y_MAX/16-1）
 905          //  @param      dat             需要显示的变量，数据类型uint8
 906          //  @return     void
 907          //  @since      v1.0
 908          //  Sample usage:               ips114_showuint8(0,0,x);//x为uint8类型
 909          //--------------------------------------------------------------------------------------------------------
             ------------
 910          void ips114_showuint8(uint16 x,uint16 y,uint8 dat)
 911          {
 912   1        uint8 a[3];
 913   1        uint8 i;
 914   1        
 915   1        a[0] = dat/100;
 916   1        a[1] = dat/10%10;
 917   1        a[2] = dat%10;
 918   1        i = 0;
 919   1        while(i<3)
 920   1        {
 921   2          ips114_showchar(x+(8*i),y*16,'0' + a[i]);
 922   2          i++;
 923   2        }
 924   1        
 925   1      }
 926          
C51 COMPILER V9.57.0.0   SEEKFREE_IPS114_SPI                                               04/28/2021 20:58:26 PAGE 17  

 927          //--------------------------------------------------------------------------------------------------------
             ------------
 928          //  @brief      液晶显示16位有符号
 929          //  @param      x               坐标x方向的起点 参数范围 0 -（IPS114_X_MAX-1）
 930          //  @param      y               坐标y方向的起点 参数范围 0 -（IPS114_Y_MAX/16-1）
 931          //  @param      dat             需要显示的变量，数据类型int16
 932          //  @return     void
 933          //  @since      v1.0
 934          //  Sample usage:               ips114_showint16(0,0,x);//x为int16类型
 935          //--------------------------------------------------------------------------------------------------------
             ------------
 936          void ips114_showint16(uint16 x,uint16 y,int16 dat)
 937          {
 938   1        uint8 a[5];
 939   1        uint8 i;
 940   1        if(dat<0)
 941   1        {
 942   2          ips114_showchar(x,y*16,'-');
 943   2          dat = -dat;
 944   2        }
 945   1        else  ips114_showchar(x,y*16,' ');
 946   1      
 947   1        a[0] = dat/10000;
 948   1        a[1] = dat/1000%10;
 949   1        a[2] = dat/100%10;
 950   1        a[3] = dat/10%10;
 951   1        a[4] = dat%10;
 952   1        
 953   1        i = 0;
 954   1        while(i<5)
 955   1        {
 956   2          ips114_showchar(x+(8*(i+1)),y*16,'0' + a[i]);
 957   2          i++;
 958   2        }
 959   1      }
 960          
 961          //--------------------------------------------------------------------------------------------------------
             ------------
 962          //  @brief      液晶显示16位无符号
 963          //  @param      x               坐标x方向的起点 参数范围 0 -（IPS114_X_MAX-1）
 964          //  @param      y               坐标y方向的起点 参数范围 0 -（IPS114_Y_MAX/16-1）
 965          //  @param      dat             需要显示的变量，数据类型uint16
 966          //  @return     void
 967          //  @since      v1.0
 968          //  Sample usage:               ips114_showuint16(0,0,x);//x为uint16类型
 969          //--------------------------------------------------------------------------------------------------------
             ------------
 970          void ips114_showuint16(uint16 x,uint16 y,uint16 dat)
 971          {
 972   1        uint8 a[5];
 973   1        uint8 i;
 974   1      
 975   1        a[0] = dat/10000;
 976   1        a[1] = dat/1000%10;
 977   1        a[2] = dat/100%10;
 978   1        a[3] = dat/10%10;
 979   1        a[4] = dat%10;
 980   1        
 981   1        i = 0;
 982   1        while(i<5)
 983   1        {
 984   2          ips114_showchar(x+(8*i),y*16,'0' + a[i]);
C51 COMPILER V9.57.0.0   SEEKFREE_IPS114_SPI                                               04/28/2021 20:58:26 PAGE 18  

 985   2          i++;
 986   2        }
 987   1      }
 988          
 989          //--------------------------------------------------------------------------------------------------------
             ------------
 990          //  @brief      液晶显示32位有符号(去除整数部分无效的0)
 991          //  @param      x               坐标x方向的起点 参数范围 0 -（IPS114_X_MAX-1）
 992          //  @param      y               坐标y方向的起点 参数范围 0 -（IPS114_Y_MAX/16-1）
 993          //  @param      dat             需要显示的变量，数据类型uint32
 994          //  @param      num             需要显示的位数 最高10位  不包含正负号
 995          //  @return     void
 996          //  @since      v1.0
 997          //  Sample usage:               ips114_showuint32(0,0,x,3);//x可以为int32 uint16 int16 uint8 int8类型
 998          //  Sample usage:               负数会显示一个 ‘-’号   正数显示一个空格
 999          //--------------------------------------------------------------------------------------------------------
             ------------
1000          void ips114_showint32(uint16 x,uint16 y,int32 dat,uint8 num)
1001          {
1002   1          int8    buff[34];
1003   1          uint8   length;
1004   1          
1005   1          if(10<num)      num = 10;
1006   1          
1007   1          num++;
1008   1          if(0>dat)   length = zf_sprintf( &buff[0],"%d",dat);//负数
1009   1          else
1010   1          {
1011   2              buff[0] = ' ';
1012   2              length = zf_sprintf( &buff[1],"%d",dat);
1013   2              length++;
1014   2          }
1015   1          while(length < num)
1016   1          {
1017   2              buff[length] = ' ';
1018   2              length++;
1019   2          }
1020   1          buff[num] = '\0';
1021   1      
1022   1          ips114_showstr(x, y, buff); //显示数字
1023   1      }
1024          
1025          
1026          //--------------------------------------------------------------------------------------------------------
             ------------
1027          //  @brief      液晶显示浮点数(去除整数部分无效的0)
1028          //  @param      x               坐标x方向的起点 参数范围 0 -（IPS114_X_MAX-1）
1029          //  @param      y               坐标y方向的起点 参数范围 0 -（IPS114_Y_MAX/16-1）
1030          //  @param      dat             需要显示的变量，数据类型float或double
1031          //  @param      num             整数位显示长度   最高10位  
1032          //  @param      pointnum        小数位显示长度   最高6位
1033          //  @return     void
1034          //  @since      v1.0
1035          //  Sample usage:               ips114_showfloat(0,0,x,2,3);//显示浮点数   整数显示2位   小数显示三位
1036          //  @note                       特别注意当发现小数部分显示的值与你写入的值不一样的时候，
1037          //                              可能是由于浮点数精度丢失问题导致的，这并不是显示函数的问题，
1038          //                              有关问题的详情，请自行百度学习   浮点数精度丢失问题。
1039          //                              负数会显示一个 ‘-’号   正数显示一个空格
1040          //--------------------------------------------------------------------------------------------------------
             ------------
1041          void ips114_showfloat(uint16 x,uint16 y,double dat,uint8 num,uint8 pointnum)
1042          {
C51 COMPILER V9.57.0.0   SEEKFREE_IPS114_SPI                                               04/28/2021 20:58:26 PAGE 19  

1043   1          uint8   length;
1044   1        int8    buff[34];
1045   1        int8    start,end,point;
1046   1      
1047   1        if(6<pointnum)  pointnum = 6;
1048   1          if(10<num)      num = 10;
1049   1              
1050   1          if(0>dat)   length = zf_sprintf( &buff[0],"%f",dat);//负数
1051   1          else
1052   1          {
1053   2              length = zf_sprintf( &buff[1],"%f",dat);
1054   2              length++;
1055   2          }
1056   1          point = length - 7;         //计算小数点位置
1057   1          start = point - num - 1;    //计算起始位
1058   1          end = point + pointnum + 1; //计算结束位
1059   1          while(0>start)//整数位不够  末尾应该填充空格
1060   1          {
1061   2              buff[end] = ' ';
1062   2              end++;
1063   2              start++;
1064   2          }
1065   1          
1066   1          if(0>dat)   buff[start] = '-';
1067   1          else        buff[start] = ' ';
1068   1          
1069   1          buff[end] = '\0';
1070   1      
1071   1          ips114_showstr(x, y, buff); //显示数字
1072   1      }
1073          
1074          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   4815    ----
   CONSTANT SIZE    =      6    ----
   XDATA SIZE       =   ----     332
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
